{"ast":null,"code":"/*!\n * Connect - methodOverride\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Provides faux HTTP method support.\n * \n * Pass an optional `key` to use when checking for\n * a method override, othewise defaults to _\\_method_.\n * The original method is available via `req.originalMethod`.\n *\n * @param {String} key\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function methodOverride(key) {\n  key = key || \"_method\";\n  return function methodOverride(req, res, next) {\n    req.originalMethod = req.originalMethod || req.method;\n\n    // req.body\n    if (req.body && key in req.body) {\n      req.method = req.body[key].toUpperCase();\n      delete req.body[key];\n      // check X-HTTP-Method-Override\n    } else if (req.headers['x-http-method-override']) {\n      req.method = req.headers['x-http-method-override'].toUpperCase();\n    }\n    next();\n  };\n};","map":{"version":3,"names":["module","exports","methodOverride","key","req","res","next","originalMethod","method","body","toUpperCase","headers"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/methodOverride.js"],"sourcesContent":["\n/*!\n * Connect - methodOverride\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Provides faux HTTP method support.\n * \n * Pass an optional `key` to use when checking for\n * a method override, othewise defaults to _\\_method_.\n * The original method is available via `req.originalMethod`.\n *\n * @param {String} key\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function methodOverride(key){\n  key = key || \"_method\";\n  return function methodOverride(req, res, next) {\n    req.originalMethod = req.originalMethod || req.method;\n\n    // req.body\n    if (req.body && key in req.body) {\n      req.method = req.body[key].toUpperCase();\n      delete req.body[key];\n    // check X-HTTP-Method-Override\n    } else if (req.headers['x-http-method-override']) {\n      req.method = req.headers['x-http-method-override'].toUpperCase();\n    }\n    \n    next();\n  };\n};\n\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAG,SAASC,cAAcA,CAACC,GAAG,EAAC;EAC3CA,GAAG,GAAGA,GAAG,IAAI,SAAS;EACtB,OAAO,SAASD,cAAcA,CAACE,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;IAC7CF,GAAG,CAACG,cAAc,GAAGH,GAAG,CAACG,cAAc,IAAIH,GAAG,CAACI,MAAM;;IAErD;IACA,IAAIJ,GAAG,CAACK,IAAI,IAAIN,GAAG,IAAIC,GAAG,CAACK,IAAI,EAAE;MAC/BL,GAAG,CAACI,MAAM,GAAGJ,GAAG,CAACK,IAAI,CAACN,GAAG,CAAC,CAACO,WAAW,EAAE;MACxC,OAAON,GAAG,CAACK,IAAI,CAACN,GAAG,CAAC;MACtB;IACA,CAAC,MAAM,IAAIC,GAAG,CAACO,OAAO,CAAC,wBAAwB,CAAC,EAAE;MAChDP,GAAG,CAACI,MAAM,GAAGJ,GAAG,CAACO,OAAO,CAAC,wBAAwB,CAAC,CAACD,WAAW,EAAE;IAClE;IAEAJ,IAAI,EAAE;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}