{"ast":null,"code":"/*!\n * Connect - limit\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Limit request bodies to the given size in `bytes`.\n *\n * A string representation of the bytesize may also be passed,\n * for example \"5mb\", \"200kb\", \"1gb\", etc.\n *\n * Examples:\n *\n *     var server = connect(\n *       connect.limit('5.5mb')\n *     ).listen(3000);\n *\n * TODO: pause EV_READ\n *\n * @param {Number|String} bytes\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function limit(bytes) {\n  if ('string' == typeof bytes) bytes = parse(bytes);\n  if ('number' != typeof bytes) throw new Error('limit() bytes required');\n  return function limit(req, res, next) {\n    var received = 0,\n      len = req.headers['content-length'] ? parseInt(req.headers['content-length'], 10) : null;\n\n    // deny the request\n    function deny() {\n      req.destroy();\n    }\n\n    // self-awareness\n    if (req._limit) return next();\n    req._limit = true;\n\n    // limit by content-length\n    if (len && len > bytes) deny();\n\n    // limit\n    req.on('data', function (chunk) {\n      received += chunk.length;\n      if (received > bytes) deny();\n    });\n    next();\n  };\n};\n\n/**\n * Parse byte `size` string.\n *\n * @param {String} size\n * @return {Number}\n * @api private\n */\n\nfunction parse(size) {\n  var parts = size.match(/^(\\d+(?:\\.\\d+)?) *(kb|mb|gb)$/),\n    n = parseFloat(parts[1]),\n    type = parts[2];\n  var map = {\n    kb: 1024,\n    mb: 1024 * 1024,\n    gb: 1024 * 1024 * 1024\n  };\n  return map[type] * n;\n}","map":{"version":3,"names":["module","exports","limit","bytes","parse","Error","req","res","next","received","len","headers","parseInt","deny","destroy","_limit","on","chunk","length","size","parts","match","n","parseFloat","type","map","kb","mb","gb"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/limit.js"],"sourcesContent":["\n/*!\n * Connect - limit\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Limit request bodies to the given size in `bytes`.\n *\n * A string representation of the bytesize may also be passed,\n * for example \"5mb\", \"200kb\", \"1gb\", etc.\n *\n * Examples:\n *\n *     var server = connect(\n *       connect.limit('5.5mb')\n *     ).listen(3000);\n *\n * TODO: pause EV_READ\n *\n * @param {Number|String} bytes\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function limit(bytes){\n  if ('string' == typeof bytes) bytes = parse(bytes);\n  if ('number' != typeof bytes) throw new Error('limit() bytes required');\n  return function limit(req, res, next){\n    var received = 0\n      , len = req.headers['content-length']\n        ? parseInt(req.headers['content-length'], 10)\n        : null;\n\n    // deny the request\n    function deny() {\n      req.destroy();\n    }\n\n    // self-awareness\n    if (req._limit) return next();\n    req._limit = true;\n\n    // limit by content-length\n    if (len && len > bytes) deny();\n\n    // limit\n    req.on('data', function(chunk){\n      received += chunk.length;\n      if (received > bytes) deny();\n    });\n\n    next();\n  };\n};\n\n/**\n * Parse byte `size` string.\n *\n * @param {String} size\n * @return {Number}\n * @api private\n */\n\nfunction parse(size) {\n  var parts = size.match(/^(\\d+(?:\\.\\d+)?) *(kb|mb|gb)$/)\n    , n = parseFloat(parts[1])\n    , type = parts[2];\n\n  var map = {\n      kb: 1024\n    , mb: 1024 * 1024\n    , gb: 1024 * 1024 * 1024\n  };\n\n  return map[type] * n;\n}"],"mappings":"AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACC,KAAK,EAAC;EACpC,IAAI,QAAQ,IAAI,OAAOA,KAAK,EAAEA,KAAK,GAAGC,KAAK,CAACD,KAAK,CAAC;EAClD,IAAI,QAAQ,IAAI,OAAOA,KAAK,EAAE,MAAM,IAAIE,KAAK,CAAC,wBAAwB,CAAC;EACvE,OAAO,SAASH,KAAKA,CAACI,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAC;IACnC,IAAIC,QAAQ,GAAG,CAAC;MACZC,GAAG,GAAGJ,GAAG,CAACK,OAAO,CAAC,gBAAgB,CAAC,GACjCC,QAAQ,CAACN,GAAG,CAACK,OAAO,CAAC,gBAAgB,CAAC,EAAE,EAAE,CAAC,GAC3C,IAAI;;IAEV;IACA,SAASE,IAAIA,CAAA,EAAG;MACdP,GAAG,CAACQ,OAAO,EAAE;IACf;;IAEA;IACA,IAAIR,GAAG,CAACS,MAAM,EAAE,OAAOP,IAAI,EAAE;IAC7BF,GAAG,CAACS,MAAM,GAAG,IAAI;;IAEjB;IACA,IAAIL,GAAG,IAAIA,GAAG,GAAGP,KAAK,EAAEU,IAAI,EAAE;;IAE9B;IACAP,GAAG,CAACU,EAAE,CAAC,MAAM,EAAE,UAASC,KAAK,EAAC;MAC5BR,QAAQ,IAAIQ,KAAK,CAACC,MAAM;MACxB,IAAIT,QAAQ,GAAGN,KAAK,EAAEU,IAAI,EAAE;IAC9B,CAAC,CAAC;IAEFL,IAAI,EAAE;EACR,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASJ,KAAKA,CAACe,IAAI,EAAE;EACnB,IAAIC,KAAK,GAAGD,IAAI,CAACE,KAAK,CAAC,+BAA+B,CAAC;IACnDC,CAAC,GAAGC,UAAU,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC;IACxBI,IAAI,GAAGJ,KAAK,CAAC,CAAC,CAAC;EAEnB,IAAIK,GAAG,GAAG;IACNC,EAAE,EAAE,IAAI;IACRC,EAAE,EAAE,IAAI,GAAG,IAAI;IACfC,EAAE,EAAE,IAAI,GAAG,IAAI,GAAG;EACtB,CAAC;EAED,OAAOH,GAAG,CAACD,IAAI,CAAC,GAAGF,CAAC;AACtB"},"metadata":{},"sourceType":"script","externalDependencies":[]}