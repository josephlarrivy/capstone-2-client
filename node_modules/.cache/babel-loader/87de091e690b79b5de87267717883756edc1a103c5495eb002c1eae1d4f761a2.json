{"ast":null,"code":"/*!\n * Connect - session - MemoryStore\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Store = require('./store'),\n  utils = require('../../utils'),\n  Session = require('./session');\n\n/**\n * Initialize a new `MemoryStore`.\n *\n * @api public\n */\n\nvar MemoryStore = module.exports = function MemoryStore() {\n  this.sessions = {};\n};\n\n/**\n * Inherit from `Store.prototype`.\n */\n\nMemoryStore.prototype.__proto__ = Store.prototype;\n\n/**\n * Attempt to fetch session by the given `sid`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.get = function (sid, fn) {\n  var self = this;\n  process.nextTick(function () {\n    var expires,\n      sess = self.sessions[sid];\n    if (sess) {\n      sess = JSON.parse(sess);\n      expires = 'string' == typeof sess.cookie.expires ? new Date(sess.cookie.expires) : sess.cookie.expires;\n      if (!expires || new Date() < expires) {\n        fn(null, sess);\n      } else {\n        self.destroy(sid, fn);\n      }\n    } else {\n      fn();\n    }\n  });\n};\n\n/**\n * Commit the given `sess` object associated with the given `sid`.\n *\n * @param {String} sid\n * @param {Session} sess\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.set = function (sid, sess, fn) {\n  var self = this;\n  process.nextTick(function () {\n    self.sessions[sid] = JSON.stringify(sess);\n    fn && fn();\n  });\n};\n\n/**\n * Destroy the session associated with the given `sid`.\n *\n * @param {String} sid\n * @api public\n */\n\nMemoryStore.prototype.destroy = function (sid, fn) {\n  var self = this;\n  process.nextTick(function () {\n    delete self.sessions[sid];\n    fn && fn();\n  });\n};\n\n/**\n * Invoke the given callback `fn` with all active sessions.\n *\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.all = function (fn) {\n  var arr = [],\n    keys = Object.keys(this.sessions);\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    arr.push(this.sessions[keys[i]]);\n  }\n  fn(null, arr);\n};\n\n/**\n * Clear all sessions.\n *\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.clear = function (fn) {\n  this.sessions = {};\n  fn && fn();\n};\n\n/**\n * Fetch number of sessions.\n *\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.length = function (fn) {\n  fn(null, Object.keys(this.sessions).length);\n};","map":{"version":3,"names":["Store","require","utils","Session","MemoryStore","module","exports","sessions","prototype","__proto__","get","sid","fn","self","process","nextTick","expires","sess","JSON","parse","cookie","Date","destroy","set","stringify","all","arr","keys","Object","i","len","length","push","clear"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/session/memory.js"],"sourcesContent":["\n/*!\n * Connect - session - MemoryStore\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar Store = require('./store')\n  , utils = require('../../utils')\n  , Session = require('./session');\n\n/**\n * Initialize a new `MemoryStore`.\n *\n * @api public\n */\n\nvar MemoryStore = module.exports = function MemoryStore() {\n  this.sessions = {};\n};\n\n/**\n * Inherit from `Store.prototype`.\n */\n\nMemoryStore.prototype.__proto__ = Store.prototype;\n\n/**\n * Attempt to fetch session by the given `sid`.\n *\n * @param {String} sid\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.get = function(sid, fn){\n  var self = this;\n  process.nextTick(function(){\n    var expires\n      , sess = self.sessions[sid];\n    if (sess) {\n      sess = JSON.parse(sess);\n      expires = 'string' == typeof sess.cookie.expires\n        ? new Date(sess.cookie.expires)\n        : sess.cookie.expires;\n      if (!expires || new Date < expires) {\n        fn(null, sess);\n      } else {\n        self.destroy(sid, fn);\n      }\n    } else {\n      fn();\n    }\n  });\n};\n\n/**\n * Commit the given `sess` object associated with the given `sid`.\n *\n * @param {String} sid\n * @param {Session} sess\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.set = function(sid, sess, fn){\n  var self = this;\n  process.nextTick(function(){\n    self.sessions[sid] = JSON.stringify(sess);\n    fn && fn();\n  });\n};\n\n/**\n * Destroy the session associated with the given `sid`.\n *\n * @param {String} sid\n * @api public\n */\n\nMemoryStore.prototype.destroy = function(sid, fn){\n  var self = this;\n  process.nextTick(function(){\n    delete self.sessions[sid];\n    fn && fn();\n  });\n};\n\n/**\n * Invoke the given callback `fn` with all active sessions.\n *\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.all = function(fn){\n  var arr = []\n    , keys = Object.keys(this.sessions);\n  for (var i = 0, len = keys.length; i < len; ++i) {\n    arr.push(this.sessions[keys[i]]);\n  }\n  fn(null, arr);\n};\n\n/**\n * Clear all sessions.\n *\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.clear = function(fn){\n  this.sessions = {};\n  fn && fn();\n};\n\n/**\n * Fetch number of sessions.\n *\n * @param {Function} fn\n * @api public\n */\n\nMemoryStore.prototype.length = function(fn){\n  fn(null, Object.keys(this.sessions).length);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}