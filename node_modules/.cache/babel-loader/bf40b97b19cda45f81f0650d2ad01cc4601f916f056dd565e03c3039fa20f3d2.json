{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Park.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { Link, Navigate, Route, Routes } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\nimport weatherAPI from \"../apis/weatherApi\";\nimport { weatherApiKey } from '../keys';\nimport '../css/Park.css';\nimport MiniMap from \"./MiniMap\";\n// import weatherAPI from \"../apis/weatherApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Park = () => {\n  _s();\n  const parkCode = useParams();\n  const [parkData, setParkData] = useState(null);\n  const [zoom, setZoom] = useState(6);\n  const [centerPosition, setCenterPosition] = useState(null);\n  const [images, setImages] = useState(null);\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const getSingleParkData = async () => {\n      let data = await NParksServiceRequest.getSingleParkData(parkCode.code);\n      setParkData(data);\n      console.log(data);\n      setCenterPosition([data.latitude, data.longitude]);\n    };\n    getSingleParkData();\n    const weatherAPI = new weatherAPI(weatherApiKey);\n    weatherAPI.getWeather(data.latitude, data.longitude).then(data => console.log(data)).catch(error => console.error(error));\n  }, []);\n  if (parkData === null) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"park\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"park-banner\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"images\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"park-image\",\n            src: parkData.images[0].url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-map-conatiner\",\n          children: /*#__PURE__*/_jsxDEV(MiniMap, {\n            zoom: zoom,\n            centerPosition: centerPosition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"park-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: parkData.fullName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 14\n          }, this), \" \", parkData.addresses[0].city, \", \", parkData.addresses[0].stateCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Designation:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 14\n          }, this), \" \", parkData.designation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: parkData.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Weather:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 14\n          }, this), \" \", parkData.weatherInfo]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: parkData.url,\n          target: \"blank\",\n          children: \"Visit Official Website\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Park, \"TvOwfaNP8e5WJS+tA1NNkeGuiaU=\", false, function () {\n  return [useParams];\n});\n_c = Park;\nexport default Park;\nvar _c;\n$RefreshReg$(_c, \"Park\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","Navigate","Route","Routes","useParams","NParksServiceRequest","weatherAPI","weatherApiKey","MiniMap","jsxDEV","_jsxDEV","Park","_s","parkCode","parkData","setParkData","zoom","setZoom","centerPosition","setCenterPosition","images","setImages","weather","setWeather","getSingleParkData","data","code","console","log","latitude","longitude","getWeather","then","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","url","fullName","addresses","city","stateCode","designation","description","weatherInfo","href","target","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Park.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, Navigate, Route, Routes } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\nimport weatherAPI from \"../apis/weatherApi\";\nimport { weatherApiKey } from '../keys'\n\n\nimport '../css/Park.css'\nimport MiniMap from \"./MiniMap\";\n// import weatherAPI from \"../apis/weatherApi\";\n\n\nconst Park = () => {\n\n  const parkCode = useParams();\n  const [parkData, setParkData] = useState(null)\n  const [zoom, setZoom] = useState(6)\n  const [centerPosition, setCenterPosition] = useState(null)\n  const [images, setImages] = useState(null)\n\n  const [weather, setWeather] = useState(null)\n\n  useEffect(() => {\n    const getSingleParkData = async () => {\n      let data = await NParksServiceRequest.getSingleParkData(parkCode.code)\n      setParkData(data)\n      console.log(data)\n      setCenterPosition([data.latitude, data.longitude])\n    }\n    getSingleParkData()\n\n    const weatherAPI = new weatherAPI(weatherApiKey);\n    weatherAPI.getWeather(data.latitude, data.longitude)\n      .then(data => console.log(data))\n      .catch(error => console.error(error));\n\n  }, [])\n\n  if (parkData === null) {\n    return (\n      <h1>Loading</h1>\n    )\n  } else {\n    return (\n      <div className=\"park\">\n\n        <div className=\"park-banner\">\n          <div className=\"images\">\n            <img\n              className='park-image'\n              src={parkData.images[0].url}\n            ></img>\n          </div>\n\n          <div className=\"mini-map-conatiner\">\n            <MiniMap \n              zoom={zoom}\n              centerPosition={centerPosition}\n            />\n          </div>\n        </div>\n        \n        <div className=\"park-info\">\n          <h3>{parkData.fullName}</h3>\n          <p><b>Location:</b> {parkData.addresses[0].city}, {parkData.addresses[0].stateCode}</p>\n          <p><b>Designation:</b> {parkData.designation}</p>\n          <p>{parkData.description}</p>\n          <p><b>Weather:</b> {parkData.weatherInfo}</p>\n          <a href={parkData.url} target='blank'>Visit Official Website</a>\n        </div>\n        \n      </div>\n    )\n  }\n\n}\n\nexport default Park;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChE,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAOC,oBAAoB,MAAM,0BAA0B;AAC3D,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,aAAa,QAAQ,SAAS;AAGvC,OAAO,iBAAiB;AACxB,OAAOC,OAAO,MAAM,WAAW;AAC/B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEjB,MAAMC,QAAQ,GAAGT,SAAS,EAAE;EAC5B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAACuB,MAAM,EAAEC,SAAS,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAM0B,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAIC,IAAI,GAAG,MAAMpB,oBAAoB,CAACmB,iBAAiB,CAACX,QAAQ,CAACa,IAAI,CAAC;MACtEX,WAAW,CAACU,IAAI,CAAC;MACjBE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MACjBN,iBAAiB,CAAC,CAACM,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAAC,CAAC;IACpD,CAAC;IACDN,iBAAiB,EAAE;IAEnB,MAAMlB,UAAU,GAAG,IAAIA,UAAU,CAACC,aAAa,CAAC;IAChDD,UAAU,CAACyB,UAAU,CAACN,IAAI,CAACI,QAAQ,EAAEJ,IAAI,CAACK,SAAS,CAAC,CACjDE,IAAI,CAACP,IAAI,IAAIE,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAC/BQ,KAAK,CAACC,KAAK,IAAIP,OAAO,CAACO,KAAK,CAACA,KAAK,CAAC,CAAC;EAEzC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIpB,QAAQ,KAAK,IAAI,EAAE;IACrB,oBACEJ,OAAA;MAAAyB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAEpB,CAAC,MAAM;IACL,oBACE7B,OAAA;MAAK8B,SAAS,EAAC,MAAM;MAAAL,QAAA,gBAEnBzB,OAAA;QAAK8B,SAAS,EAAC,aAAa;QAAAL,QAAA,gBAC1BzB,OAAA;UAAK8B,SAAS,EAAC,QAAQ;UAAAL,QAAA,eACrBzB,OAAA;YACE8B,SAAS,EAAC,YAAY;YACtBC,GAAG,EAAE3B,QAAQ,CAACM,MAAM,CAAC,CAAC,CAAC,CAACsB;UAAI;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QACvB;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACH,eAEN7B,OAAA;UAAK8B,SAAS,EAAC,oBAAoB;UAAAL,QAAA,eACjCzB,OAAA,CAACF,OAAO;YACNQ,IAAI,EAAEA,IAAK;YACXE,cAAc,EAAEA;UAAe;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAC/B;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACE;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACF,eAEN7B,OAAA;QAAK8B,SAAS,EAAC,WAAW;QAAAL,QAAA,gBACxBzB,OAAA;UAAAyB,QAAA,EAAKrB,QAAQ,CAAC6B;QAAQ;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,eAC5B7B,OAAA;UAAAyB,QAAA,gBAAGzB,OAAA;YAAAyB,QAAA,EAAG;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI,KAAC,EAACzB,QAAQ,CAAC8B,SAAS,CAAC,CAAC,CAAC,CAACC,IAAI,EAAC,IAAE,EAAC/B,QAAQ,CAAC8B,SAAS,CAAC,CAAC,CAAC,CAACE,SAAS;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACvF7B,OAAA;UAAAyB,QAAA,gBAAGzB,OAAA;YAAAyB,QAAA,EAAG;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI,KAAC,EAACzB,QAAQ,CAACiC,WAAW;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACjD7B,OAAA;UAAAyB,QAAA,EAAIrB,QAAQ,CAACkC;QAAW;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC7B7B,OAAA;UAAAyB,QAAA,gBAAGzB,OAAA;YAAAyB,QAAA,EAAG;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAI,KAAC,EAACzB,QAAQ,CAACmC,WAAW;QAAA;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eAC7C7B,OAAA;UAAGwC,IAAI,EAAEpC,QAAQ,CAAC4B,GAAI;UAACS,MAAM,EAAC,OAAO;UAAAhB,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEF;EAEV;AAEF,CAAC;AAAA3B,EAAA,CA/DKD,IAAI;EAAA,QAESP,SAAS;AAAA;AAAAgD,EAAA,GAFtBzC,IAAI;AAiEV,eAAeA,IAAI;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}