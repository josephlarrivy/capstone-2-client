{"ast":null,"code":"/*!\n * Connect - compiler\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs'),\n  path = require('path'),\n  parse = require('url').parse;\n\n/**\n * Require cache.\n */\n\nvar cache = {};\n\n/**\n * Setup compiler.\n *\n * Options:\n *\n *   - `src`     Source directory, defaults to **CWD**.\n *   - `dest`    Destination directory, defaults `src`.\n *   - `enable`  Array of enabled compilers.\n *\n * Compilers:\n *\n *   - `sass`   Compiles cass to css\n *   - `less`   Compiles less to css\n *   - `coffeescript`   Compiles coffee to js\n *\n * @param {Object} options\n * @api public\n */\n\nexports = module.exports = function compiler(options) {\n  options = options || {};\n  var srcDir = options.src || process.cwd(),\n    destDir = options.dest || srcDir,\n    enable = options.enable;\n  if (!enable || enable.length === 0) {\n    throw new Error('compiler\\'s \"enable\" option is not set, nothing will be compiled.');\n  }\n  return function compiler(req, res, next) {\n    if ('GET' != req.method) return next();\n    var pathname = parse(req.url).pathname;\n    for (var i = 0, len = enable.length; i < len; ++i) {\n      var name = enable[i],\n        compiler = compilers[name];\n      if (compiler.match.test(pathname)) {\n        var src = (srcDir + pathname).replace(compiler.match, compiler.ext),\n          dest = destDir + pathname;\n\n        // Compare mtimes\n        fs.stat(src, function (err, srcStats) {\n          if (err) {\n            if ('ENOENT' == err.code) {\n              next();\n            } else {\n              next(err);\n            }\n          } else {\n            fs.stat(dest, function (err, destStats) {\n              if (err) {\n                // Oh snap! it does not exist, compile it\n                if ('ENOENT' == err.code) {\n                  compile();\n                } else {\n                  next(err);\n                }\n              } else {\n                // Source has changed, compile it\n                if (srcStats.mtime > destStats.mtime) {\n                  compile();\n                } else {\n                  // Defer file serving\n                  next();\n                }\n              }\n            });\n          }\n        });\n\n        // Compile to the destination\n        function compile() {\n          fs.readFile(src, 'utf8', function (err, str) {\n            if (err) {\n              next(err);\n            } else {\n              compiler.compile(str, function (err, str) {\n                if (err) {\n                  next(err);\n                } else {\n                  fs.writeFile(dest, str, 'utf8', function (err) {\n                    next(err);\n                  });\n                }\n              });\n            }\n          });\n        }\n        return;\n      }\n    }\n    next();\n  };\n};\n\n/**\n * Bundled compilers:\n *\n *  - [sass](http://github.com/visionmedia/sass.js) to _css_\n *  - [less](http://github.com/cloudhead/less.js) to _css_\n *  - [coffee](http://github.com/jashkenas/coffee-script) to _js_\n */\n\nvar compilers = exports.compilers = {\n  sass: {\n    match: /\\.css$/,\n    ext: '.sass',\n    compile: function (str, fn) {\n      var sass = cache.sass || (cache.sass = require('sass'));\n      try {\n        fn(null, sass.render(str));\n      } catch (err) {\n        fn(err);\n      }\n    }\n  },\n  less: {\n    match: /\\.css$/,\n    ext: '.less',\n    compile: function (str, fn) {\n      var less = cache.less || (cache.less = require('less'));\n      try {\n        less.render(str, fn);\n      } catch (err) {\n        fn(err);\n      }\n    }\n  },\n  coffeescript: {\n    match: /\\.js$/,\n    ext: '.coffee',\n    compile: function (str, fn) {\n      var coffee = cache.coffee || (cache.coffee = require('coffee-script'));\n      try {\n        fn(null, coffee.compile(str));\n      } catch (err) {\n        fn(err);\n      }\n    }\n  }\n};","map":{"version":3,"names":["fs","require","path","parse","cache","exports","module","compiler","options","srcDir","src","process","cwd","destDir","dest","enable","length","Error","req","res","next","method","pathname","url","i","len","name","compilers","match","test","replace","ext","stat","err","srcStats","code","destStats","compile","mtime","readFile","str","writeFile","sass","fn","render","less","coffeescript","coffee"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/compiler.js"],"sourcesContent":["\n/*!\n * Connect - compiler\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar fs = require('fs')\n  , path = require('path')\n  , parse = require('url').parse;\n\n/**\n * Require cache.\n */\n\nvar cache = {};\n\n/**\n * Setup compiler.\n *\n * Options:\n *\n *   - `src`     Source directory, defaults to **CWD**.\n *   - `dest`    Destination directory, defaults `src`.\n *   - `enable`  Array of enabled compilers.\n *\n * Compilers:\n *\n *   - `sass`   Compiles cass to css\n *   - `less`   Compiles less to css\n *   - `coffeescript`   Compiles coffee to js\n *\n * @param {Object} options\n * @api public\n */\n\nexports = module.exports = function compiler(options){\n  options = options || {};\n\n  var srcDir = options.src || process.cwd()\n    , destDir = options.dest || srcDir\n    , enable = options.enable;\n\n  if (!enable || enable.length === 0) {\n    throw new Error('compiler\\'s \"enable\" option is not set, nothing will be compiled.');\n  }\n\n  return function compiler(req, res, next){\n    if ('GET' != req.method) return next();\n    var pathname = parse(req.url).pathname;\n    for (var i = 0, len = enable.length; i < len; ++i) {\n      var name = enable[i]\n        , compiler = compilers[name];\n      if (compiler.match.test(pathname)) {\n        var src = (srcDir + pathname).replace(compiler.match, compiler.ext)\n          , dest = destDir + pathname;\n\n        // Compare mtimes\n        fs.stat(src, function(err, srcStats){\n          if (err) {\n            if ('ENOENT' == err.code) {\n              next();\n            } else {\n              next(err);\n            }\n          } else {\n            fs.stat(dest, function(err, destStats){\n              if (err) {\n                // Oh snap! it does not exist, compile it\n                if ('ENOENT' == err.code) {\n                  compile();\n                } else {\n                  next(err);\n                }\n              } else {\n                // Source has changed, compile it\n                if (srcStats.mtime > destStats.mtime) {\n                  compile();\n                } else {\n                  // Defer file serving\n                  next();\n                }\n              }\n            });\n          }\n        });\n\n        // Compile to the destination\n        function compile() {\n          fs.readFile(src, 'utf8', function(err, str){\n            if (err) {\n              next(err);\n            } else {\n              compiler.compile(str, function(err, str){\n                if (err) {\n                  next(err);\n                } else {\n                  fs.writeFile(dest, str, 'utf8', function(err){\n                    next(err);\n                  });\n                }\n              });\n            }\n          });\n        }\n        return;\n      }\n    }\n    next();\n  };\n};\n\n/**\n * Bundled compilers:\n *\n *  - [sass](http://github.com/visionmedia/sass.js) to _css_\n *  - [less](http://github.com/cloudhead/less.js) to _css_\n *  - [coffee](http://github.com/jashkenas/coffee-script) to _js_\n */\n\nvar compilers = exports.compilers = {\n  sass: {\n    match: /\\.css$/,\n    ext: '.sass',\n    compile: function(str, fn){\n      var sass = cache.sass || (cache.sass = require('sass'));\n      try {\n        fn(null, sass.render(str));\n      } catch (err) {\n        fn(err);\n      }\n    }\n  },\n  less: {\n    match: /\\.css$/,\n    ext: '.less',\n    compile: function(str, fn){\n      var less = cache.less || (cache.less = require('less'));\n      try {\n        less.render(str, fn);\n      } catch (err) {\n        fn(err);\n      }\n    }\n  },\n  coffeescript: {\n    match: /\\.js$/,\n    ext: '.coffee',\n    compile: function(str, fn){\n      var coffee = cache.coffee || (cache.coffee = require('coffee-script'));\n      try {\n        fn(null, coffee.compile(str));\n      } catch (err) {\n        fn(err);\n      }\n    }\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}