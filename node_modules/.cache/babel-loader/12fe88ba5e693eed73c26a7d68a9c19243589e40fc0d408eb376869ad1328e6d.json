{"ast":null,"code":"import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, Navigate, Route, Routes } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport NParksServiceRequest from \"../nationalParksApi\";\nimport '../css/Park.css';\nconst Park = _ref => {\n  let {\n    showingParks,\n    setShowingParks,\n    changeZoom\n  } = _ref;\n} // const parkCode = useParams();\n// const [parkData, setParkData] = useState(null)\n\n// useEffect(() => {\n//   const getSingleParkData = async () => {\n//     let data = await NParksServiceRequest.getSingleParkData(parkCode.code)\n//     setParkData(data)\n//     // console.log(data)\n//     setShowingParks([data])\n//     changeZoom(10)\n\n//   }\n//   getSingleParkData()\n//   setParkData(parkData)\n//   console.log('Park reloaded')\n// }, [])\n\n// if (parkData === null) {\n//   return (\n//     <h1>Loading</h1>\n//   )\n// } else {\n//   return (\n//     <div>\n//       <div className=\"images\">\n//         <img\n//           className='park-image'\n//           src={parkData.images[0].url}\n//         ></img>\n//       </div>\n//       <h3>{parkData.fullName}</h3>\n//       <p><b>Location:</b> {parkData.addresses[0].city}, {parkData.addresses[0].stateCode}</p>\n//       <p><b>Designation:</b> {parkData.designation}</p>\n//       <p>{parkData.description}</p>\n//       <p><b>Weather:</b> {parkData.weatherInfo}</p>\n//       <a href={parkData.url} target='blank'>Visit Official Website</a>\n//     </div>\n//   )\n// }\n;\n_c = Park;\nexport default Park;\nvar _c;\n$RefreshReg$(_c, \"Park\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Link","Navigate","Route","Routes","useParams","NParksServiceRequest","Park","_ref","showingParks","setShowingParks","changeZoom","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Park.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { Link, Navigate, Route, Routes } from 'react-router-dom';\nimport { useParams } from 'react-router';\n\nimport NParksServiceRequest from \"../nationalParksApi\";\n\nimport '../css/Park.css'\n\n\nconst Park = ({ showingParks, setShowingParks, changeZoom }) => {\n\n  // const parkCode = useParams();\n  // const [parkData, setParkData] = useState(null)\n\n  // useEffect(() => {\n  //   const getSingleParkData = async () => {\n  //     let data = await NParksServiceRequest.getSingleParkData(parkCode.code)\n  //     setParkData(data)\n  //     // console.log(data)\n  //     setShowingParks([data])\n  //     changeZoom(10)\n\n  //   }\n  //   getSingleParkData()\n  //   setParkData(parkData)\n  //   console.log('Park reloaded')\n  // }, [])\n\n  // if (parkData === null) {\n  //   return (\n  //     <h1>Loading</h1>\n  //   )\n  // } else {\n  //   return (\n  //     <div>\n  //       <div className=\"images\">\n  //         <img\n  //           className='park-image'\n  //           src={parkData.images[0].url}\n  //         ></img>\n  //       </div>\n  //       <h3>{parkData.fullName}</h3>\n  //       <p><b>Location:</b> {parkData.addresses[0].city}, {parkData.addresses[0].stateCode}</p>\n  //       <p><b>Designation:</b> {parkData.designation}</p>\n  //       <p>{parkData.description}</p>\n  //       <p><b>Weather:</b> {parkData.weatherInfo}</p>\n  //       <a href={parkData.url} target='blank'>Visit Official Website</a>\n  //     </div>\n  //   )\n  // }\n\n}\n\nexport default Park;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAChE,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAOC,oBAAoB,MAAM,qBAAqB;AAEtD,OAAO,iBAAiB;AAGxB,MAAMC,IAAI,GAAGC,IAAA,IAAmD;EAAA,IAAlD;IAAEC,YAAY;IAAEC,eAAe;IAAEC;EAAW,CAAC,GAAAH,IAAA;AA0C3D,CAAC,CAxCC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;AAAAI,EAAA,GA1CKL,IAAI;AA4CV,eAAeA,IAAI;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}