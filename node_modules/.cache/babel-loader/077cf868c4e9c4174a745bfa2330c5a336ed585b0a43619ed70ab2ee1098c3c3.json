{"ast":null,"code":"import axios from \"axios\";\nclass SunriseSunset {\n  static formatDate(isoString) {\n    const date = new Date(isoString);\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZoneName: 'short'\n    };\n    return date.toLocaleString(options);\n  }\n  static async getSunriseSunset(latitude, longitude) {\n    try {\n      const url = `https://api.sunrise-sunset.org/json?lat=${latitude}&lng=${longitude}&formatted=0`;\n      const response = await axios.get(url);\n      const formattedData = {\n        \"sunrise\": this.formatDate(response.data.results.sunrise),\n        \"sunset\": this.formatDate(response.data.results.sunset)\n      };\n      return formattedData;\n    } catch (error) {\n      console.error(`Error fetching sunrise-sunset data: ${error.message}`);\n      return null;\n    }\n  }\n}\nexport default SunriseSunset;","map":{"version":3,"names":["axios","SunriseSunset","formatDate","isoString","date","Date","options","year","month","day","hour","minute","timeZoneName","toLocaleString","getSunriseSunset","latitude","longitude","url","response","get","formattedData","data","results","sunrise","sunset","error","console","message"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/apis/sunriseSunsetApi.js"],"sourcesContent":["import axios from \"axios\";\n\n\nclass SunriseSunset {\n\n\n  static formatDate(isoString) {\n    const date = new Date(isoString);\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit',\n      timeZoneName: 'short',\n    };\n\n    return date.toLocaleString(options);\n  }\n\n  static async getSunriseSunset (latitude, longitude) {\n    try {\n      const url = `https://api.sunrise-sunset.org/json?lat=${latitude}&lng=${longitude}&formatted=0`;\n      const response = await axios.get(url);\n\n      const formattedData = \n        {\n          \"sunrise\": this.formatDate(response.data.results.sunrise),\n          \"sunset\": this.formatDate(response.data.results.sunset)\n        }\n\n      return formattedData\n    } catch (error) {\n      console.error(`Error fetching sunrise-sunset data: ${error.message}`);\n      return null;\n    }\n  }\n}\n\nexport default SunriseSunset;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,aAAa,CAAC;EAGlB,OAAOC,UAAUA,CAACC,SAAS,EAAE;IAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,MAAMG,OAAO,GAAG;MACdC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,MAAM;MACbC,GAAG,EAAE,SAAS;MACdC,IAAI,EAAE,SAAS;MACfC,MAAM,EAAE,SAAS;MACjBC,YAAY,EAAE;IAChB,CAAC;IAED,OAAOR,IAAI,CAACS,cAAc,CAACP,OAAO,CAAC;EACrC;EAEA,aAAaQ,gBAAgBA,CAAEC,QAAQ,EAAEC,SAAS,EAAE;IAClD,IAAI;MACF,MAAMC,GAAG,GAAI,2CAA0CF,QAAS,QAAOC,SAAU,cAAa;MAC9F,MAAME,QAAQ,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAACF,GAAG,CAAC;MAErC,MAAMG,aAAa,GACjB;QACE,SAAS,EAAE,IAAI,CAAClB,UAAU,CAACgB,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;QACzD,QAAQ,EAAE,IAAI,CAACrB,UAAU,CAACgB,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACE,MAAM;MACxD,CAAC;MAEH,OAAOJ,aAAa;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAE,uCAAsCA,KAAK,CAACE,OAAQ,EAAC,CAAC;MACrE,OAAO,IAAI;IACb;EACF;AACF;AAEA,eAAe1B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}