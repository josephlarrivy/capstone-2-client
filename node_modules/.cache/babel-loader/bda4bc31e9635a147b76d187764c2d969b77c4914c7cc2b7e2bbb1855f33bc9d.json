{"ast":null,"code":"/*!\n * Connect - HTTPServer\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar HTTPServer = require('./http').Server,\n  https = require('https');\n\n/**\n * Initialize a new `Server` with the given\n *`options` and `middleware`. The HTTPS api\n * is identical to the [HTTP](http.html) server,\n * however TLS `options` must be provided before\n * passing in the optional middleware.\n *\n * @params {Object} options\n * @params {Array} middleawre\n * @return {Server}\n * @api public\n */\n\nvar Server = exports.Server = function HTTPSServer(options, middleware) {\n  this.stack = [];\n  middleware.forEach(function (fn) {\n    this.use(fn);\n  }, this);\n  https.Server.call(this, options, this.handle);\n};\n\n/**\n * Inherit from `http.Server.prototype`.\n */\n\nServer.prototype.__proto__ = https.Server.prototype;\n\n// mixin HTTPServer methods\n\nObject.keys(HTTPServer.prototype).forEach(function (method) {\n  Server.prototype[method] = HTTPServer.prototype[method];\n});","map":{"version":3,"names":["HTTPServer","require","Server","https","exports","HTTPSServer","options","middleware","stack","forEach","fn","use","call","handle","prototype","__proto__","Object","keys","method"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/https.js"],"sourcesContent":["\n/*!\n * Connect - HTTPServer\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar HTTPServer = require('./http').Server\n  , https = require('https');\n\n/**\n * Initialize a new `Server` with the given\n *`options` and `middleware`. The HTTPS api\n * is identical to the [HTTP](http.html) server,\n * however TLS `options` must be provided before\n * passing in the optional middleware.\n *\n * @params {Object} options\n * @params {Array} middleawre\n * @return {Server}\n * @api public\n */\n\nvar Server = exports.Server = function HTTPSServer(options, middleware) {\n  this.stack = [];\n  middleware.forEach(function(fn){\n    this.use(fn);\n  }, this);\n  https.Server.call(this, options, this.handle);\n};\n\n/**\n * Inherit from `http.Server.prototype`.\n */\n\nServer.prototype.__proto__ = https.Server.prototype;\n\n// mixin HTTPServer methods\n\nObject.keys(HTTPServer.prototype).forEach(function(method){\n  Server.prototype[method] = HTTPServer.prototype[method];\n});"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM;EACrCC,KAAK,GAAGF,OAAO,CAAC,OAAO,CAAC;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GAAGE,OAAO,CAACF,MAAM,GAAG,SAASG,WAAWA,CAACC,OAAO,EAAEC,UAAU,EAAE;EACtE,IAAI,CAACC,KAAK,GAAG,EAAE;EACfD,UAAU,CAACE,OAAO,CAAC,UAASC,EAAE,EAAC;IAC7B,IAAI,CAACC,GAAG,CAACD,EAAE,CAAC;EACd,CAAC,EAAE,IAAI,CAAC;EACRP,KAAK,CAACD,MAAM,CAACU,IAAI,CAAC,IAAI,EAAEN,OAAO,EAAE,IAAI,CAACO,MAAM,CAAC;AAC/C,CAAC;;AAED;AACA;AACA;;AAEAX,MAAM,CAACY,SAAS,CAACC,SAAS,GAAGZ,KAAK,CAACD,MAAM,CAACY,SAAS;;AAEnD;;AAEAE,MAAM,CAACC,IAAI,CAACjB,UAAU,CAACc,SAAS,CAAC,CAACL,OAAO,CAAC,UAASS,MAAM,EAAC;EACxDhB,MAAM,CAACY,SAAS,CAACI,MAAM,CAAC,GAAGlB,UAAU,CAACc,SAAS,CAACI,MAAM,CAAC;AACzD,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}