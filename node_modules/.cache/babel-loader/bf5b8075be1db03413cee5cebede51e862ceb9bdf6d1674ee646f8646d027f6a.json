{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/NewsReleases.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\nimport '../css/NewsReleases.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsReleases = () => {\n  _s();\n  const [releases, setReleases] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getNewsReleases(5);\n      console.log(response);\n      setReleases(response);\n    };\n    getData();\n  }, []);\n  function formatDate(dateString) {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = months[date.getMonth()];\n    const day = date.getDate();\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    const period = hour >= 12 ? \"PM\" : \"AM\";\n    const formattedHour = hour % 12 === 0 ? 12 : hour % 12;\n    const formattedMinute = minute < 10 ? `0${minute}` : minute;\n    return `${month} ${day}, ${year} at ${formattedHour}:${formattedMinute} ${period}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"news-releases-inner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"NewsReleases\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), releases && releases.map(item => {\n      let forMattedDate = formatDate(item.releaseDate);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-release-item-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.url,\n          target: \"_blank\",\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.abstract\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: forMattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsReleases, \"m5fmMHb3u+peFeYxtA7WaY7+OwQ=\");\n_c = NewsReleases;\nexport default NewsReleases;\nvar _c;\n$RefreshReg$(_c, \"NewsReleases\");","map":{"version":3,"names":["React","useState","useEffect","NParksServiceRequest","jsxDEV","_jsxDEV","NewsReleases","_s","releases","setReleases","getData","response","getNewsReleases","console","log","formatDate","dateString","months","date","Date","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","period","formattedHour","formattedMinute","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","forMattedDate","releaseDate","className","href","url","target","title","abstract","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/NewsReleases.js"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\n\nimport '../css/NewsReleases.css'\n\nconst NewsReleases = () => {\n\n  const [releases, setReleases] = useState(null)\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getNewsReleases(5)\n      console.log(response)\n      setReleases(response)\n    }\n    getData()\n  }, [])\n\n  function formatDate(dateString) {\n    const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n\n    const date = new Date(dateString);\n    const year = date.getFullYear();\n    const month = months[date.getMonth()];\n    const day = date.getDate();\n    const hour = date.getHours();\n    const minute = date.getMinutes();\n    const period = hour >= 12 ? \"PM\" : \"AM\";\n    const formattedHour = hour % 12 === 0 ? 12 : hour % 12;\n    const formattedMinute = minute < 10 ? `0${minute}` : minute;\n\n    return `${month} ${day}, ${year} at ${formattedHour}:${formattedMinute} ${period}`;\n  }\n\n\n  return (\n    <div id=\"news-releases-inner-container\">\n      <h1>NewsReleases</h1>\n      {releases && releases.map(item => {\n        let forMattedDate = formatDate(item.releaseDate)\n        return (\n          <div key={item.id} className=\"news-release-item-container\">\n            <a href={item.url} target=\"_blank\">\n              <h4>{item.title}</h4>\n            </a>\n            <p>{item.abstract}</p>\n            <p>{forMattedDate}</p>\n          </div>\n        )\n      })\n      }\n    </div>\n  )\n}\n\nexport default NewsReleases;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}