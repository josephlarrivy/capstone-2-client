{"ast":null,"code":"/*!\n * Connect - vhost\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Setup vhost for the given `hostname` and `server`.\n *\n * Examples:\n *\n *     connect(\n *       connect.vhost('foo.com',\n *         connect.createServer(...middleware...)\n *       ),\n *       connect.vhost('bar.com',\n *         connect.createServer(...middleware...)\n *       )\n *     );\n *\n * @param {String} hostname\n * @param {Server} server\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function vhost(hostname, server) {\n  if (!hostname) throw new Error('vhost hostname required');\n  if (!server) throw new Error('vhost server required');\n  var regexp = new RegExp('^' + hostname.replace(/[*]/g, '(.*?)') + '$');\n  if (server.onvhost) server.onvhost(hostname);\n  return function vhost(req, res, next) {\n    if (!req.headers.host) return next();\n    var host = req.headers.host.split(':')[0];\n    if (req.subdomains = regexp.exec(host)) {\n      req.subdomains = req.subdomains[0].split('.').slice(0, -1);\n      server.emit(\"request\", req, res, next);\n    } else {\n      next();\n    }\n  };\n};","map":{"version":3,"names":["module","exports","vhost","hostname","server","Error","regexp","RegExp","replace","onvhost","req","res","next","headers","host","split","subdomains","exec","slice","emit"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/vhost.js"],"sourcesContent":["\n/*!\n * Connect - vhost\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Setup vhost for the given `hostname` and `server`.\n *\n * Examples:\n *\n *     connect(\n *       connect.vhost('foo.com',\n *         connect.createServer(...middleware...)\n *       ),\n *       connect.vhost('bar.com',\n *         connect.createServer(...middleware...)\n *       )\n *     );\n *\n * @param {String} hostname\n * @param {Server} server\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function vhost(hostname, server){\n  if (!hostname) throw new Error('vhost hostname required');\n  if (!server) throw new Error('vhost server required');\n  var regexp = new RegExp('^' + hostname.replace(/[*]/g, '(.*?)') + '$');\n  if (server.onvhost) server.onvhost(hostname);\n  return function vhost(req, res, next){\n    if (!req.headers.host) return next();\n    var host = req.headers.host.split(':')[0];\n    if (req.subdomains = regexp.exec(host)) {\n      req.subdomains = req.subdomains[0].split('.').slice(0, -1);\n      server.emit(\"request\", req, res, next);\n    } else {\n      next();\n    }\n  };\n};\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAA,MAAM,CAACC,OAAO,GAAG,SAASC,KAAKA,CAACC,QAAQ,EAAEC,MAAM,EAAC;EAC/C,IAAI,CAACD,QAAQ,EAAE,MAAM,IAAIE,KAAK,CAAC,yBAAyB,CAAC;EACzD,IAAI,CAACD,MAAM,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;EACrD,IAAIC,MAAM,GAAG,IAAIC,MAAM,CAAC,GAAG,GAAGJ,QAAQ,CAACK,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,GAAG,GAAG,CAAC;EACtE,IAAIJ,MAAM,CAACK,OAAO,EAAEL,MAAM,CAACK,OAAO,CAACN,QAAQ,CAAC;EAC5C,OAAO,SAASD,KAAKA,CAACQ,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAC;IACnC,IAAI,CAACF,GAAG,CAACG,OAAO,CAACC,IAAI,EAAE,OAAOF,IAAI,EAAE;IACpC,IAAIE,IAAI,GAAGJ,GAAG,CAACG,OAAO,CAACC,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACzC,IAAIL,GAAG,CAACM,UAAU,GAAGV,MAAM,CAACW,IAAI,CAACH,IAAI,CAAC,EAAE;MACtCJ,GAAG,CAACM,UAAU,GAAGN,GAAG,CAACM,UAAU,CAAC,CAAC,CAAC,CAACD,KAAK,CAAC,GAAG,CAAC,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;MAC1Dd,MAAM,CAACe,IAAI,CAAC,SAAS,EAAET,GAAG,EAAEC,GAAG,EAAEC,IAAI,CAAC;IACxC,CAAC,MAAM;MACLA,IAAI,EAAE;IACR;EACF,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}