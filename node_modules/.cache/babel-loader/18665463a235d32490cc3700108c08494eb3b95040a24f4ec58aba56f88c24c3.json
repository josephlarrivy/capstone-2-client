{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Alerts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\nimport '../css/Alerts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState(null);\n  const [numAlerts, setNumAlerts] = useState(6);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getAlerts(numAlerts);\n      console.log(response);\n      setAlerts(response);\n    };\n    getData();\n  }, [numAlerts]);\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n      // second: 'numeric'\n    };\n\n    return date.toLocaleString('en-US', options);\n  }\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure';\n    } else if (input === 'Information') {\n      return 'alert-type-information';\n    } else if (input === 'Caution') {\n      return 'alert-type-caution';\n    } else if (input === 'Danger') {\n      return 'alert-type-danger';\n    }\n  }\n  function getMoreAlerts() {\n    setNumAlerts(numAlerts + 6);\n    console.log('get more alerts');\n  }\n  async function getParkNameFromCode(code) {\n    const response = await NParksServiceRequest.getParkName(code);\n    console.log(response);\n    return response;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"alerts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"alerts-items\",\n      children: alerts && alerts.map(item => {\n        let forMattedDate = formatDate(item.lastIndexedDate);\n        let convertedAlertType = convertAlertType(item.category);\n        let parkFullName = getParkNameFromCode(item.parkCode);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: convertedAlertType,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: forMattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: parkFullName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more-info-icon\",\n            children: item.url ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"more-info-icon\",\n                src: require('../images/more-info-icon.png')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getMoreAlerts,\n      children: \"See More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Alerts, \"ExX2pMM4+h6RtQmGFJhgs/mgZW0=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","NParksServiceRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","Alerts","_s","alerts","setAlerts","numAlerts","setNumAlerts","getData","response","getAlerts","console","log","formatDate","dateString","date","Date","options","month","day","hour","minute","toLocaleString","convertAlertType","input","getMoreAlerts","getParkNameFromCode","code","getParkName","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","forMattedDate","lastIndexedDate","convertedAlertType","category","parkFullName","parkCode","className","title","url","href","target","src","require","onClick","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Alerts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\n\nimport '../css/Alerts.css'\n\nconst Alerts = () => {\n\n  const [alerts, setAlerts] = useState(null)\n  const [numAlerts, setNumAlerts] = useState(6)\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getAlerts(numAlerts)\n      console.log(response)\n      setAlerts(response)\n    }\n    getData()\n  }, [numAlerts])\n\n  \n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    };\n    return date.toLocaleString('en-US', options);\n  }\n\n\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure'\n    } else if (input === 'Information') {\n      return 'alert-type-information'\n    } else if (input === 'Caution') {\n      return 'alert-type-caution'\n    } else if (input === 'Danger') {\n      return 'alert-type-danger'\n    }\n  }\n\n  function getMoreAlerts() {\n    setNumAlerts(numAlerts+6)\n    console.log('get more alerts')\n  }\n\n  async function getParkNameFromCode (code) {\n    const response = await NParksServiceRequest.getParkName(code)\n    console.log(response)\n    return response\n  }\n\n  return (\n    <div id=\"alerts-container\">\n      <h1>Alerts</h1>\n      <div id=\"alerts-items\">\n        {alerts && alerts.map(item => {\n          let forMattedDate = formatDate(item.lastIndexedDate)\n          let convertedAlertType = convertAlertType(item.category)\n          let parkFullName = getParkNameFromCode(item.parkCode)\n          return (\n            <div key={item.id} className=\"alert-item\">\n              <div className={convertedAlertType}>\n                <p>{item.category}</p>\n              </div>\n              <div className=\"alert-information\">\n                <p>{forMattedDate}</p>\n                <p>{item.title}</p>\n                <p>{parkFullName}</p>\n              </div>\n              <div className=\"more-info-icon\">\n                {item.url\n                  ? <a href={item.url} target=\"_blank\">\n                      <img className=\"more-info-icon\" src={require('../images/more-info-icon.png')}></img>\n                    </a>\n                  : <></>\n                }\n              </div>\n            </div>\n          )\n        })\n        }\n      </div>\n      <button onClick={getMoreAlerts}>See More</button>\n    </div>\n  )\n}\n\nexport default Alerts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}