{"ast":null,"code":"/*!\n * Connect\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar HTTPServer = require('./http').Server,\n  HTTPSServer = require('./https').Server,\n  fs = require('fs');\n\n// node patches\n\nrequire('./patch');\n\n// expose createServer() as the module\n\nexports = module.exports = createServer;\n\n/**\n * Framework version.\n */\n\nexports.version = '1.4.1';\n\n/**\n * Initialize a new `connect.HTTPServer` with the middleware\n * passed to this function. When an object is passed _first_,\n * we assume these are the tls options, and return a `connect.HTTPSServer`.\n *\n * Examples:\n *\n * An example HTTP server, accepting several middleware.\n *\n *     var server = connect.createServer(\n *         connect.logger()\n *       , connect.static(__dirname + '/public')\n *     );\n *\n * An HTTPS server, utilizing the same middleware as above.\n *\n *     var server = connect.createServer(\n *         { key: key, cert: cert }\n *       , connect.logger()\n *       , connect.static(__dirname + '/public')\n *     );\n *\n * Alternatively with connect 1.0 we may omit `createServer()`.\n *\n *     connect(\n *         connect.logger()\n *       , connect.static(__dirname + '/public')\n *     ).listen(3000);\n *\n * @param  {Object|Function} ...\n * @return {Server}\n * @api public\n */\n\nfunction createServer() {\n  if ('object' == typeof arguments[0]) {\n    return new HTTPSServer(arguments[0], Array.prototype.slice.call(arguments, 1));\n  } else {\n    return new HTTPServer(Array.prototype.slice.call(arguments));\n  }\n}\n;\n\n// support connect.createServer()\n\nexports.createServer = createServer;\n\n// auto-load getters\n\nexports.middleware = {};\n\n/**\n * Auto-load bundled middleware with getters.\n */\n\nfs.readdirSync(__dirname + '/middleware').forEach(function (filename) {\n  if (/\\.js$/.test(filename)) {\n    var name = filename.substr(0, filename.lastIndexOf('.'));\n    exports.middleware.__defineGetter__(name, function () {\n      return require('./middleware/' + name);\n    });\n  }\n});\n\n// expose utils\n\nexports.utils = require('./utils');\n\n// expose getters as first-class exports\n\nexports.utils.merge(exports, exports.middleware);\n\n// expose constructors\n\nexports.HTTPServer = HTTPServer;\nexports.HTTPSServer = HTTPSServer;","map":{"version":3,"names":["HTTPServer","require","Server","HTTPSServer","fs","exports","module","createServer","version","arguments","Array","prototype","slice","call","middleware","readdirSync","__dirname","forEach","filename","test","name","substr","lastIndexOf","__defineGetter__","utils","merge"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/connect.js"],"sourcesContent":["\n/*!\n * Connect\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar HTTPServer = require('./http').Server\n  , HTTPSServer = require('./https').Server\n  , fs = require('fs');\n\n// node patches\n\nrequire('./patch');\n\n// expose createServer() as the module\n\nexports = module.exports = createServer;\n\n/**\n * Framework version.\n */\n\nexports.version = '1.4.1';\n\n/**\n * Initialize a new `connect.HTTPServer` with the middleware\n * passed to this function. When an object is passed _first_,\n * we assume these are the tls options, and return a `connect.HTTPSServer`.\n *\n * Examples:\n *\n * An example HTTP server, accepting several middleware.\n *\n *     var server = connect.createServer(\n *         connect.logger()\n *       , connect.static(__dirname + '/public')\n *     );\n *\n * An HTTPS server, utilizing the same middleware as above.\n *\n *     var server = connect.createServer(\n *         { key: key, cert: cert }\n *       , connect.logger()\n *       , connect.static(__dirname + '/public')\n *     );\n *\n * Alternatively with connect 1.0 we may omit `createServer()`.\n *\n *     connect(\n *         connect.logger()\n *       , connect.static(__dirname + '/public')\n *     ).listen(3000);\n *\n * @param  {Object|Function} ...\n * @return {Server}\n * @api public\n */\n\nfunction createServer() {\n  if ('object' == typeof arguments[0]) {\n    return new HTTPSServer(arguments[0], Array.prototype.slice.call(arguments, 1));\n  } else {\n    return new HTTPServer(Array.prototype.slice.call(arguments));\n  }\n};\n\n// support connect.createServer()\n\nexports.createServer = createServer;\n\n// auto-load getters\n\nexports.middleware = {};\n\n/**\n * Auto-load bundled middleware with getters.\n */\n\nfs.readdirSync(__dirname + '/middleware').forEach(function(filename){\n  if (/\\.js$/.test(filename)) {\n    var name = filename.substr(0, filename.lastIndexOf('.'));\n    exports.middleware.__defineGetter__(name, function(){\n      return require('./middleware/' + name);\n    });\n  }\n});\n\n// expose utils\n\nexports.utils = require('./utils');\n\n// expose getters as first-class exports\n\nexports.utils.merge(exports, exports.middleware);\n\n// expose constructors\n\nexports.HTTPServer = HTTPServer;\nexports.HTTPSServer = HTTPSServer;\n\n"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM;EACrCC,WAAW,GAAGF,OAAO,CAAC,SAAS,CAAC,CAACC,MAAM;EACvCE,EAAE,GAAGH,OAAO,CAAC,IAAI,CAAC;;AAEtB;;AAEAA,OAAO,CAAC,SAAS,CAAC;;AAElB;;AAEAI,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGE,YAAY;;AAEvC;AACA;AACA;;AAEAF,OAAO,CAACG,OAAO,GAAG,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASD,YAAYA,CAAA,EAAG;EACtB,IAAI,QAAQ,IAAI,OAAOE,SAAS,CAAC,CAAC,CAAC,EAAE;IACnC,OAAO,IAAIN,WAAW,CAACM,SAAS,CAAC,CAAC,CAAC,EAAEC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,SAAS,EAAE,CAAC,CAAC,CAAC;EAChF,CAAC,MAAM;IACL,OAAO,IAAIT,UAAU,CAACU,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACJ,SAAS,CAAC,CAAC;EAC9D;AACF;AAAC;;AAED;;AAEAJ,OAAO,CAACE,YAAY,GAAGA,YAAY;;AAEnC;;AAEAF,OAAO,CAACS,UAAU,GAAG,CAAC,CAAC;;AAEvB;AACA;AACA;;AAEAV,EAAE,CAACW,WAAW,CAACC,SAAS,GAAG,aAAa,CAAC,CAACC,OAAO,CAAC,UAASC,QAAQ,EAAC;EAClE,IAAI,OAAO,CAACC,IAAI,CAACD,QAAQ,CAAC,EAAE;IAC1B,IAAIE,IAAI,GAAGF,QAAQ,CAACG,MAAM,CAAC,CAAC,EAAEH,QAAQ,CAACI,WAAW,CAAC,GAAG,CAAC,CAAC;IACxDjB,OAAO,CAACS,UAAU,CAACS,gBAAgB,CAACH,IAAI,EAAE,YAAU;MAClD,OAAOnB,OAAO,CAAC,eAAe,GAAGmB,IAAI,CAAC;IACxC,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;;AAEF;;AAEAf,OAAO,CAACmB,KAAK,GAAGvB,OAAO,CAAC,SAAS,CAAC;;AAElC;;AAEAI,OAAO,CAACmB,KAAK,CAACC,KAAK,CAACpB,OAAO,EAAEA,OAAO,CAACS,UAAU,CAAC;;AAEhD;;AAEAT,OAAO,CAACL,UAAU,GAAGA,UAAU;AAC/BK,OAAO,CAACF,WAAW,GAAGA,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}