{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Activities.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\nimport NavBar from \"../NavBar\";\nimport NParksServiceRequest from '../apis/nationalParksApi';\nimport '../css/NavBar.css';\nimport '../css/PhotoGallery.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Activities = _ref => {\n  _s();\n  let {\n    token,\n    setToken\n  } = _ref;\n  const [images, setImages] = useState([]);\n  const [hoveredId, setHoveredId] = useState(null);\n  const [loadingMoreImages, setLoadingMoreImages] = useState(true);\n  useEffect(() => {\n    const getInitialImages = async () => {\n      let resp = await NParksServiceRequest.getRandomImages();\n      // console.log(resp)\n      setImages(resp);\n      setLoadingMoreImages(false);\n    };\n    getInitialImages();\n  }, []);\n  const loadMoreImages = async () => {\n    const resp = await NParksServiceRequest.getRandomImages();\n    for (let anotherImage of resp) {\n      images.push(anotherImage);\n    }\n    setLoadingMoreImages(false);\n  };\n  const turnOnIsLoadingImages = () => {\n    setLoadingMoreImages(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {\n      token: token,\n      setToken: setToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Activities, \"d/zsjHYLZLECeulXzubbFrd1MQI=\");\n_c = Activities;\nexport default Activities;\nvar _c;\n$RefreshReg$(_c, \"Activities\");","map":{"version":3,"names":["React","useState","useEffect","Link","NavBar","NParksServiceRequest","jsxDEV","_jsxDEV","Activities","_ref","_s","token","setToken","images","setImages","hoveredId","setHoveredId","loadingMoreImages","setLoadingMoreImages","getInitialImages","resp","getRandomImages","loadMoreImages","anotherImage","push","turnOnIsLoadingImages","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Activities.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from 'react-router-dom';\n\n\nimport NavBar from \"../NavBar\";\nimport NParksServiceRequest from '../apis/nationalParksApi';\n\nimport '../css/NavBar.css'\nimport '../css/PhotoGallery.css'\n\n\n\n\nconst Activities = ({ token, setToken }) => {\n\n  const [images, setImages] = useState([])\n  const [hoveredId, setHoveredId] = useState(null);\n  const [loadingMoreImages, setLoadingMoreImages] = useState(true)\n\n  useEffect(() => {\n    const getInitialImages = async () => {\n      let resp = await NParksServiceRequest.getRandomImages()\n      // console.log(resp)\n      setImages(resp)\n      setLoadingMoreImages(false)\n    }\n    getInitialImages()\n  }, [])\n\n  const loadMoreImages = async () => {\n    const resp = await NParksServiceRequest.getRandomImages()\n    for (let anotherImage of resp) {\n      images.push(anotherImage)\n    }\n    setLoadingMoreImages(false)\n  }\n\n  const turnOnIsLoadingImages = () => {\n    setLoadingMoreImages(true)\n  }\n\n  return (\n    <div className=\"gallery-page-container\">\n      <NavBar\n        token={token}\n        setToken={setToken}\n      />\n      <div className=\"gallery-container\">\n        \n      </div>\n    </div>\n  )\n}\n\nexport default Activities;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AAGvC,OAAOC,MAAM,MAAM,WAAW;AAC9B,OAAOC,oBAAoB,MAAM,0BAA0B;AAE3D,OAAO,mBAAmB;AAC1B,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKhC,MAAMC,UAAU,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAErC,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACgB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhEC,SAAS,CAAC,MAAM;IACd,MAAMiB,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAIC,IAAI,GAAG,MAAMf,oBAAoB,CAACgB,eAAe,EAAE;MACvD;MACAP,SAAS,CAACM,IAAI,CAAC;MACfF,oBAAoB,CAAC,KAAK,CAAC;IAC7B,CAAC;IACDC,gBAAgB,EAAE;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,MAAMF,IAAI,GAAG,MAAMf,oBAAoB,CAACgB,eAAe,EAAE;IACzD,KAAK,IAAIE,YAAY,IAAIH,IAAI,EAAE;MAC7BP,MAAM,CAACW,IAAI,CAACD,YAAY,CAAC;IAC3B;IACAL,oBAAoB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMO,qBAAqB,GAAGA,CAAA,KAAM;IAClCP,oBAAoB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,oBACEX,OAAA;IAAKmB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrCpB,OAAA,CAACH,MAAM;MACLO,KAAK,EAAEA,KAAM;MACbC,QAAQ,EAAEA;IAAS;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACnB,eACFxB,OAAA;MAAKmB,SAAS,EAAC;IAAmB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAE5B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAArB,EAAA,CAvCKF,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}