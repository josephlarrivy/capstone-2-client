{"ast":null,"code":"/*!\n * Connect - profiler\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Profile the duration of a request.\n *\n * Typically this middleware should be utilized\n * _above_ all others, as it proxies the `res.end()`\n * method, being first allows it to encapsulate all\n * other middleware.\n *\n * Example Output:\n *\n *      GET /\n *      response time 2ms\n *      memory rss 52.00kb\n *      memory vsize 2.07mb\n *      heap before 3.76mb / 8.15mb\n *      heap after 3.80mb / 8.15mb\n *\n * @api public\n */\n\nmodule.exports = function profiler() {\n  return function (req, res, next) {\n    var end = res.end,\n      start = snapshot();\n\n    // state snapshot\n    function snapshot() {\n      return {\n        mem: process.memoryUsage(),\n        time: new Date()\n      };\n    }\n\n    // proxy res.end()\n    res.end = function (data, encoding) {\n      res.end = end;\n      res.end(data, encoding);\n      compare(req, start, snapshot());\n    };\n    next();\n  };\n};\n\n/**\n * Compare `start` / `end` snapshots.\n *\n * @param {IncomingRequest} req\n * @param {Object} start\n * @param {Object} end\n * @api private\n */\n\nfunction compare(req, start, end) {\n  console.log();\n  row(req.method, req.url);\n  row('response time:', end.time - start.time + 'ms');\n  row('memory rss:', formatBytes(end.mem.rss - start.mem.rss));\n  row('memory vsize:', formatBytes(end.mem.vsize - start.mem.vsize));\n  row('heap before:', formatBytes(start.mem.heapUsed) + ' / ' + formatBytes(start.mem.heapTotal));\n  row('heap after:', formatBytes(end.mem.heapUsed) + ' / ' + formatBytes(end.mem.heapTotal));\n  console.log();\n}\n\n/**\n * Row helper\n *\n * @param {String} key\n * @param {String} val\n * @api private\n */\n\nfunction row(key, val) {\n  console.log('  \\033[90m%s\\033[0m \\033[36m%s\\033[0m', key, val);\n}\n\n/**\n * Format byte-size.\n *\n * @param {Number} bytes\n * @return {String}\n * @api private\n */\n\nfunction formatBytes(bytes) {\n  var kb = 1024,\n    mb = 1024 * kb,\n    gb = 1024 * mb;\n  if (bytes < kb) return bytes + 'b';\n  if (bytes < mb) return (bytes / kb).toFixed(2) + 'kb';\n  if (bytes < gb) return (bytes / mb).toFixed(2) + 'mb';\n  return (bytes / gb).toFixed(2) + 'gb';\n}\n;","map":{"version":3,"names":["module","exports","profiler","req","res","next","end","start","snapshot","mem","process","memoryUsage","time","Date","data","encoding","compare","console","log","row","method","url","formatBytes","rss","vsize","heapUsed","heapTotal","key","val","bytes","kb","mb","gb","toFixed"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/profiler.js"],"sourcesContent":["\n/*!\n * Connect - profiler\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Profile the duration of a request.\n *\n * Typically this middleware should be utilized\n * _above_ all others, as it proxies the `res.end()`\n * method, being first allows it to encapsulate all\n * other middleware.\n *\n * Example Output:\n *\n *      GET /\n *      response time 2ms\n *      memory rss 52.00kb\n *      memory vsize 2.07mb\n *      heap before 3.76mb / 8.15mb\n *      heap after 3.80mb / 8.15mb\n *\n * @api public\n */\n\nmodule.exports = function profiler(){\n  return function(req, res, next){\n    var end = res.end\n      , start = snapshot();\n\n    // state snapshot\n    function snapshot() {\n      return {\n          mem: process.memoryUsage()\n        , time: new Date\n      };\n    }\n\n    // proxy res.end()\n    res.end = function(data, encoding){\n      res.end = end;\n      res.end(data, encoding);\n      compare(req, start, snapshot())\n    };\n\n    next();\n  }\n};\n\n/**\n * Compare `start` / `end` snapshots.\n *\n * @param {IncomingRequest} req\n * @param {Object} start\n * @param {Object} end\n * @api private\n */\n\nfunction compare(req, start, end) {\n  console.log();\n  row(req.method, req.url);\n  row('response time:', (end.time - start.time) + 'ms');\n  row('memory rss:', formatBytes(end.mem.rss - start.mem.rss));\n  row('memory vsize:', formatBytes(end.mem.vsize - start.mem.vsize));\n  row('heap before:', formatBytes(start.mem.heapUsed) + ' / ' + formatBytes(start.mem.heapTotal));\n  row('heap after:', formatBytes(end.mem.heapUsed) + ' / ' + formatBytes(end.mem.heapTotal));\n  console.log();\n}\n\n/**\n * Row helper\n *\n * @param {String} key\n * @param {String} val\n * @api private\n */\n\nfunction row(key, val) {\n  console.log('  \\033[90m%s\\033[0m \\033[36m%s\\033[0m', key, val);\n}\n\n/**\n * Format byte-size.\n *\n * @param {Number} bytes\n * @return {String}\n * @api private\n */\n\nfunction formatBytes(bytes) {\n  var kb = 1024\n    , mb = 1024 * kb\n    , gb = 1024 * mb;\n  if (bytes < kb) return bytes + 'b';\n  if (bytes < mb) return (bytes / kb).toFixed(2) + 'kb';\n  if (bytes < gb) return (bytes / mb).toFixed(2) + 'mb';\n  return (bytes / gb).toFixed(2) + 'gb';\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}