{"ast":null,"code":"class weatherAPI {\n  constructor(weatherApiKey) {\n    this.convertCELtoFAH = num => {\n      const converted = Math.floor(num * 1.8 + 32);\n      return converted;\n    };\n    this.apiKey = weatherApiKey;\n    this.baseURL = \"https://api.openweathermap.org/data/2.5/forecast\";\n  }\n  async getWeather(latitude, longitude) {\n    const url = `${this.baseURL}?lat=${latitude}&lon=${longitude}&appid=${this.apiKey}&units=metric`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Unable to get weather data: ${response.status}`);\n    }\n    const data = await response.json();\n    // console.log(data)\n    return this.formatData(data);\n  }\n  formatData(data) {\n    const formattedData = [];\n    for (let i = 0; i < 5; i += 2) {\n      const convertedTemp = this.convertCELtoFAH(data.list[i].main.temp);\n      const weather = {\n        date: new Date(data.list[i].dt * 1000),\n        temperature: convertedTemp,\n        description: data.list[i].weather[0].description,\n        icon: data.list[i].weather[0].icon,\n        iconUrl: `https://openweathermap.org/img/wn/${data.list[i].weather[0].icon}@2x.png`\n      };\n      formattedData.push(weather);\n    }\n    return formattedData;\n  }\n}\nexport default weatherAPI;","map":{"version":3,"names":["weatherAPI","constructor","weatherApiKey","convertCELtoFAH","num","converted","Math","floor","apiKey","baseURL","getWeather","latitude","longitude","url","response","fetch","ok","Error","status","data","json","formatData","formattedData","i","convertedTemp","list","main","temp","weather","date","Date","dt","temperature","description","icon","iconUrl","push"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/apis/weatherApi.js"],"sourcesContent":["\nclass weatherAPI {\n  constructor(weatherApiKey) {\n    this.apiKey = weatherApiKey;\n    this.baseURL = \"https://api.openweathermap.org/data/2.5/forecast\";\n  }\n\n  convertCELtoFAH = (num) => {\n    const converted = Math.floor(num*1.8+32)\n    return converted\n  }\n\n  async getWeather(latitude, longitude) {\n    const url = `${this.baseURL}?lat=${latitude}&lon=${longitude}&appid=${this.apiKey}&units=metric`;\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error(`Unable to get weather data: ${response.status}`);\n    }\n    const data = await response.json();\n    // console.log(data)\n    return this.formatData(data);\n  }\n\n  formatData(data) {\n    const formattedData = [];\n    for (let i = 0; i < 5; i+=2) {\n      const convertedTemp = this.convertCELtoFAH(data.list[i].main.temp)\n      const weather = {\n        date: new Date(data.list[i].dt * 1000),\n        temperature: convertedTemp,\n        description: data.list[i].weather[0].description,\n        icon: data.list[i].weather[0].icon,\n        iconUrl: `https://openweathermap.org/img/wn/${data.list[i].weather[0].icon}@2x.png`\n      };\n      formattedData.push(weather);\n    }\n    return formattedData;\n  }\n}\n\nexport default weatherAPI;"],"mappings":"AACA,MAAMA,UAAU,CAAC;EACfC,WAAWA,CAACC,aAAa,EAAE;IAAA,KAK3BC,eAAe,GAAIC,GAAG,IAAK;MACzB,MAAMC,SAAS,GAAGC,IAAI,CAACC,KAAK,CAACH,GAAG,GAAC,GAAG,GAAC,EAAE,CAAC;MACxC,OAAOC,SAAS;IAClB,CAAC;IAPC,IAAI,CAACG,MAAM,GAAGN,aAAa;IAC3B,IAAI,CAACO,OAAO,GAAG,kDAAkD;EACnE;EAOA,MAAMC,UAAUA,CAACC,QAAQ,EAAEC,SAAS,EAAE;IACpC,MAAMC,GAAG,GAAI,GAAE,IAAI,CAACJ,OAAQ,QAAOE,QAAS,QAAOC,SAAU,UAAS,IAAI,CAACJ,MAAO,eAAc;IAChG,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,+BAA8BH,QAAQ,CAACI,MAAO,EAAC,CAAC;IACnE;IACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;IAClC;IACA,OAAO,IAAI,CAACC,UAAU,CAACF,IAAI,CAAC;EAC9B;EAEAE,UAAUA,CAACF,IAAI,EAAE;IACf,MAAMG,aAAa,GAAG,EAAE;IACxB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAE,CAAC,EAAE;MAC3B,MAAMC,aAAa,GAAG,IAAI,CAACrB,eAAe,CAACgB,IAAI,CAACM,IAAI,CAACF,CAAC,CAAC,CAACG,IAAI,CAACC,IAAI,CAAC;MAClE,MAAMC,OAAO,GAAG;QACdC,IAAI,EAAE,IAAIC,IAAI,CAACX,IAAI,CAACM,IAAI,CAACF,CAAC,CAAC,CAACQ,EAAE,GAAG,IAAI,CAAC;QACtCC,WAAW,EAAER,aAAa;QAC1BS,WAAW,EAAEd,IAAI,CAACM,IAAI,CAACF,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACK,WAAW;QAChDC,IAAI,EAAEf,IAAI,CAACM,IAAI,CAACF,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACM,IAAI;QAClCC,OAAO,EAAG,qCAAoChB,IAAI,CAACM,IAAI,CAACF,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,CAAC,CAACM,IAAK;MAC7E,CAAC;MACDZ,aAAa,CAACc,IAAI,CAACR,OAAO,CAAC;IAC7B;IACA,OAAON,aAAa;EACtB;AACF;AAEA,eAAetB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}