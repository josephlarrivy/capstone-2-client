{"ast":null,"code":"import axios from \"axios\";\nclass SunriseSunset {\n  static formatDate(isoString) {\n    const date = new Date(isoString);\n    const hours24 = date.getHours();\n    const hours12 = hours24 % 12 || 12;\n    const minutes = date.getMinutes();\n    const amPm = hours24 >= 12 ? 'PM' : 'AM';\n    const formattedHours = String(hours12).padStart(2, '0');\n    const formattedMinutes = String(minutes).padStart(2, '0');\n    return `${formattedHours}:${formattedMinutes} ${amPm}`;\n  }\n  static async getSunriseSunset(latitude, longitude) {\n    try {\n      const url = `https://api.sunrise-sunset.org/json?lat=${latitude}&lng=${longitude}&formatted=0`;\n      const response = await axios.get(url);\n      const formattedData = {\n        \"sunrise\": this.formatDate(response.data.results.sunrise),\n        \"sunset\": this.formatDate(response.data.results.sunset)\n      };\n      return formattedData;\n    } catch (error) {\n      console.error(`Error fetching sunrise-sunset data: ${error.message}`);\n      return null;\n    }\n  }\n}\nexport default SunriseSunset;","map":{"version":3,"names":["axios","SunriseSunset","formatDate","isoString","date","Date","hours24","getHours","hours12","minutes","getMinutes","amPm","formattedHours","String","padStart","formattedMinutes","getSunriseSunset","latitude","longitude","url","response","get","formattedData","data","results","sunrise","sunset","error","console","message"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/apis/sunriseSunsetApi.js"],"sourcesContent":["import axios from \"axios\";\n\n\nclass SunriseSunset {\n\n\n  static formatDate(isoString) {\n    const date = new Date(isoString);\n    const hours24 = date.getHours();\n    const hours12 = (hours24 % 12) || 12;\n    const minutes = date.getMinutes();\n    const amPm = hours24 >= 12 ? 'PM' : 'AM';\n\n    const formattedHours = String(hours12).padStart(2, '0');\n    const formattedMinutes = String(minutes).padStart(2, '0');\n\n    return `${formattedHours}:${formattedMinutes} ${amPm}`;\n  }\n\n  static async getSunriseSunset (latitude, longitude) {\n    try {\n      const url = `https://api.sunrise-sunset.org/json?lat=${latitude}&lng=${longitude}&formatted=0`;\n      const response = await axios.get(url);\n\n      const formattedData = \n        {\n          \"sunrise\": this.formatDate(response.data.results.sunrise),\n          \"sunset\": this.formatDate(response.data.results.sunset)\n        }\n\n      return formattedData\n    } catch (error) {\n      console.error(`Error fetching sunrise-sunset data: ${error.message}`);\n      return null;\n    }\n  }\n}\n\nexport default SunriseSunset;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,aAAa,CAAC;EAGlB,OAAOC,UAAUA,CAACC,SAAS,EAAE;IAC3B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,SAAS,CAAC;IAChC,MAAMG,OAAO,GAAGF,IAAI,CAACG,QAAQ,EAAE;IAC/B,MAAMC,OAAO,GAAIF,OAAO,GAAG,EAAE,IAAK,EAAE;IACpC,MAAMG,OAAO,GAAGL,IAAI,CAACM,UAAU,EAAE;IACjC,MAAMC,IAAI,GAAGL,OAAO,IAAI,EAAE,GAAG,IAAI,GAAG,IAAI;IAExC,MAAMM,cAAc,GAAGC,MAAM,CAACL,OAAO,CAAC,CAACM,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IACvD,MAAMC,gBAAgB,GAAGF,MAAM,CAACJ,OAAO,CAAC,CAACK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;IAEzD,OAAQ,GAAEF,cAAe,IAAGG,gBAAiB,IAAGJ,IAAK,EAAC;EACxD;EAEA,aAAaK,gBAAgBA,CAAEC,QAAQ,EAAEC,SAAS,EAAE;IAClD,IAAI;MACF,MAAMC,GAAG,GAAI,2CAA0CF,QAAS,QAAOC,SAAU,cAAa;MAC9F,MAAME,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAACF,GAAG,CAAC;MAErC,MAAMG,aAAa,GACjB;QACE,SAAS,EAAE,IAAI,CAACpB,UAAU,CAACkB,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;QACzD,QAAQ,EAAE,IAAI,CAACvB,UAAU,CAACkB,QAAQ,CAACG,IAAI,CAACC,OAAO,CAACE,MAAM;MACxD,CAAC;MAEH,OAAOJ,aAAa;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAE,uCAAsCA,KAAK,CAACE,OAAQ,EAAC,CAAC;MACrE,OAAO,IAAI;IACb;EACF;AACF;AAEA,eAAe5B,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}