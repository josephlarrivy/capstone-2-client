{"ast":null,"code":"import axios from \"axios\";\nimport { parks_api_key } from \"../keys\";\nconst PARKS_BASE_URL = \"https://developer.nps.gov/api/v1\";\nclass NParksServiceRequest {\n  static async makeRequest(endpoint) {\n    try {\n      const headers = {\n        \"X-Api-Key\": parks_api_key\n      };\n      const method = 'get';\n      const url = `${PARKS_BASE_URL}${endpoint}`;\n      const resp = await axios({\n        method,\n        url,\n        headers\n      });\n      // console.log(url)\n      return resp;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n  static async getAllParks() {\n    let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '700';\n    const resp = await this.makeRequest(`/parks?limit=${limit}`);\n    const list = resp.data.data;\n    const parksArray = [];\n    for (let park of list) {\n      parksArray.push(park);\n    }\n    return parksArray;\n  }\n  static async getSingleParkData(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`);\n    return resp.data.data[0];\n  }\n  static async getRandomImages() {\n    let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '700';\n    const resp = await this.makeRequest(`/parks?limit=${limit}`);\n    const list = resp.data.data;\n    const idxArr = [];\n    while (idxArr.length < 12) {\n      const num = Math.floor(Math.random() * 468);\n      if (!idxArr.includes(num)) {\n        idxArr.push(num);\n      }\n    }\n    const parksArray = [];\n    for (let park of list) {\n      parksArray.push(park);\n    }\n    // console.log(parksArray)\n\n    const imagesArray = [];\n    for (let idx of idxArr) {\n      const parkName = parksArray[idx].name;\n      const imageUrl = parksArray[idx].images[0].url;\n      const state = parksArray[idx].states;\n      const parkCode = parksArray[idx].parkCode;\n      imagesArray.push({\n        parkName,\n        imageUrl,\n        state,\n        parkCode\n      });\n    }\n    return imagesArray;\n  }\n  static async getSupplementalData(type, USstate) {\n    const resp = await this.makeRequest(`/${type}?stateCode=${USstate}`);\n    return resp.data.data;\n  }\n  static async getNewsReleases() {\n    let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '5';\n    const resp = await this.makeRequest(`/newsreleases?limit=${limit}`);\n    return resp.data.data;\n  }\n  static async getAlerts() {\n    let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '9';\n    const resp = await this.makeRequest(`/alerts?stateCode=&limit=${limit}`);\n    return resp.data.data;\n  }\n  static async getParkName(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`);\n    return resp.data.data[0].fullName;\n  }\n  static async getVisitorCentersByState(state) {\n    const resp = await this.makeRequest(`/visitorcenters?stateCode=${state}`);\n    return resp.data.data;\n  }\n  static async getParksByState(state) {\n    const resp = await this.makeRequest(`/parks?stateCode=${state}`);\n    return resp.data.data;\n  }\n  static async searchInParks(searchTerm) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '10';\n    const resp = await this.makeRequest(`/parks?stateCode=&q=${searchTerm}&limit=${limit}`);\n    return resp.data.data;\n  }\n  static async searchInArticles(searchTerm) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '10';\n    const resp = await this.makeRequest(`/articles?stateCode=&q=${searchTerm}&limit=${limit}`);\n    return resp.data.data;\n  }\n  static async searchInTours(searchTerm) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '10';\n    const resp = await this.makeRequest(`/tours?stateCode=&q=${searchTerm}&limit=${limit}`);\n    return resp.data.data;\n  }\n  static async getTourDetails(id) {\n    const resp = await this.makeRequest(`/tours?id=${id}`);\n    return resp.data.data[0];\n  }\n  static async getParkLatLong(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`);\n    const latitude = resp.data.data[0].latitude;\n    const longitude = resp.data.data[0].longitude;\n    return {\n      latitude,\n      longitude\n    };\n  }\n  static async getSingleParkImages(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`);\n    const imagesArr = [];\n    for (let image of resp.data.data[0].images) {\n      imagesArr.push(image);\n    }\n    return imagesArr;\n  }\n}\nexport default NParksServiceRequest;","map":{"version":3,"names":["axios","parks_api_key","PARKS_BASE_URL","NParksServiceRequest","makeRequest","endpoint","headers","method","url","resp","err","console","error","getAllParks","limit","arguments","length","undefined","list","data","parksArray","park","push","getSingleParkData","code","getRandomImages","idxArr","num","Math","floor","random","includes","imagesArray","idx","parkName","name","imageUrl","images","state","states","parkCode","getSupplementalData","type","USstate","getNewsReleases","getAlerts","getParkName","fullName","getVisitorCentersByState","getParksByState","searchInParks","searchTerm","searchInArticles","searchInTours","getTourDetails","id","getParkLatLong","latitude","longitude","getSingleParkImages","imagesArr","image"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/apis/nationalParksApi.js"],"sourcesContent":["import axios from \"axios\";\n\nimport { parks_api_key } from \"../keys\";\n\nconst PARKS_BASE_URL = \"https://developer.nps.gov/api/v1\";\n\nclass NParksServiceRequest {\n\n  static async makeRequest(endpoint) {\n    try {\n      const headers = { \"X-Api-Key\": parks_api_key };\n      const method = 'get'\n      const url = `${PARKS_BASE_URL}${endpoint}`\n      const resp = await axios({ method, url, headers })\n      // console.log(url)\n      return (resp)\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  static async getAllParks(limit='700') {\n    const resp = await this.makeRequest(`/parks?limit=${limit}`)\n    const list = resp.data.data\n\n    const parksArray = []\n    for (let park of list) {\n      parksArray.push(park)\n    }\n    return parksArray\n  }\n\n  static async getSingleParkData(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`)\n    return resp.data.data[0]\n  }\n\n  static async getRandomImages(limit = '700') {\n    const resp = await this.makeRequest(`/parks?limit=${limit}`)\n    const list = resp.data.data\n\n    const idxArr = []\n    while (idxArr.length < 12) {\n      const num = Math.floor(Math.random()*468)\n      if (!idxArr.includes(num)) {\n        idxArr.push(num)\n      }\n    }\n\n    const parksArray = []\n    for (let park of list) {\n      parksArray.push(park)\n    }\n    // console.log(parksArray)\n\n    const imagesArray = []\n    for (let idx of idxArr) {\n      const parkName = parksArray[idx].name\n      const imageUrl = parksArray[idx].images[0].url\n      const state = parksArray[idx].states\n      const parkCode = parksArray[idx].parkCode\n      imagesArray.push({parkName, imageUrl, state, parkCode})\n    }\n    \n    return imagesArray\n  }\n\n  static async getSupplementalData(type, USstate) {\n    const resp = await this.makeRequest(`/${type}?stateCode=${USstate}`)\n    return resp.data.data\n  }\n\n  static async getNewsReleases(limit='5') {\n    const resp = await this.makeRequest(`/newsreleases?limit=${limit}`)\n    return resp.data.data\n  }\n\n  static async getAlerts(limit='9') {\n    const resp = await this.makeRequest(`/alerts?stateCode=&limit=${limit}`)\n    return resp.data.data\n  }\n\n  static async getParkName(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`)\n    return resp.data.data[0].fullName\n  }\n\n  static async getVisitorCentersByState(state) {\n    const resp = await this.makeRequest(`/visitorcenters?stateCode=${state}`)\n    return resp.data.data\n  }\n\n  static async getParksByState(state) {\n    const resp = await this.makeRequest(`/parks?stateCode=${state}`)\n    return resp.data.data\n  }\n\n  static async searchInParks(searchTerm, limit='10') {\n    const resp = await this.makeRequest(`/parks?stateCode=&q=${searchTerm}&limit=${limit}`)\n    return resp.data.data\n  }\n\n  static async searchInArticles(searchTerm, limit='10') {\n    const resp = await this.makeRequest(`/articles?stateCode=&q=${searchTerm}&limit=${limit}`)\n    return resp.data.data\n  }\n\n  static async searchInTours(searchTerm, limit = '10') {\n    const resp = await this.makeRequest(`/tours?stateCode=&q=${searchTerm}&limit=${limit}`)\n    return resp.data.data\n  }\n\n  static async getTourDetails(id) {\n    const resp = await this.makeRequest(`/tours?id=${id}`)\n    return resp.data.data[0]\n  }\n\n  static async getParkLatLong(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`)\n    const latitude = resp.data.data[0].latitude\n    const longitude = resp.data.data[0].longitude\n    return {latitude, longitude}\n  }\n\n  static async getSingleParkImages(code) {\n    const resp = await this.makeRequest(`/parks?parkCode=${code}`)\n    const imagesArr = []\n    for (let image of resp.data.data[0].images) {\n      imagesArr.push(image)\n    }\n    return imagesArr\n  }\n\n}\n\nexport default NParksServiceRequest;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}