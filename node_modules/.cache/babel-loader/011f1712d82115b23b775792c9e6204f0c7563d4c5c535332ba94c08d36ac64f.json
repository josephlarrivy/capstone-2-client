{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Weather.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport WeatherAPI from \"../apis/weatherApi\";\nimport { weatherApiKey } from '../keys';\nimport '../css/Weather.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst weatherAPI = new WeatherAPI(weatherApiKey);\nconst Weather = _ref => {\n  _s();\n  let {\n    centerPosition\n  } = _ref;\n  const [weather, setWeather] = useState(null);\n  useEffect(() => {\n    const getWeatherData = async () => {\n      const data = await weatherAPI.getWeather(centerPosition[0], centerPosition[1]);\n      console.log(data);\n      setWeather(data);\n    };\n    getWeatherData();\n  }, []);\n  function convertTimestampToDay(timestamp) {\n    const date = new Date(timestamp);\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return daysOfWeek[date.getDay()];\n  }\n  if (weather === null) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-days-container\",\n        children: weather && weather.map(w => {\n          const convertedDay = convertTimestampToDay(w.date.getTime());\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"weather-day\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: /*#__PURE__*/_jsxDEV(\"b\", {\n                children: convertedDay\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 20\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"weather-image\",\n              style: {\n                backgroundImage: `url(${w.iconUrl})`\n              }\n            }, w.temperature, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: w.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [w.temperature, \" \\u2109\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)]\n          }, w.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this);\n        })\n      }, 'weather-days-container', false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, \"weather-container\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n};\n_s(Weather, \"zh6OemVMK1sGCMM7fACoVGDcjjs=\");\n_c = Weather;\nexport default Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["React","useEffect","useState","WeatherAPI","weatherApiKey","Fragment","_Fragment","jsxDEV","_jsxDEV","weatherAPI","Weather","_ref","_s","centerPosition","weather","setWeather","getWeatherData","data","getWeather","console","log","convertTimestampToDay","timestamp","date","Date","daysOfWeek","getDay","className","children","map","w","convertedDay","getTime","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundImage","iconUrl","temperature","description","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Weather.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport WeatherAPI from \"../apis/weatherApi\";\nimport { weatherApiKey } from '../keys'\n\nimport '../css/Weather.css'\n\nconst weatherAPI = new WeatherAPI(weatherApiKey);\n\n\nconst Weather = ({centerPosition}) => {\n\n  const [weather, setWeather] = useState(null)\n\n  useEffect(() => {\n    const getWeatherData = async () => {\n      const data = await weatherAPI.getWeather(centerPosition[0], centerPosition[1])\n      console.log(data)\n      setWeather(data)\n    }\n    getWeatherData()\n\n  }, [])\n\n  function convertTimestampToDay(timestamp) {\n    const date = new Date(timestamp);\n    const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return daysOfWeek[date.getDay()];\n  }\n\n\n  if (weather === null) {\n    return (\n      <></>\n    )\n  } else {\n    return(\n      <div key=\"weather-container\" className=\"weather-container\">\n        {/* <h2>Weather Forcast</h2> */}\n        <div key='weather-days-container' className='weather-days-container'>\n          {weather && weather.map(w => {\n\n            const convertedDay = convertTimestampToDay(w.date.getTime())\n\n            return (\n              <div key={w.date} className=\"weather-day\">\n                <p><b>{convertedDay}</b></p>\n\n                <div\n                  className='weather-image'\n                  key={w.temperature}\n                  style={{\n                    backgroundImage: `url(${w.iconUrl})`\n                  }}\n                ></div>\n\n                <p>{w.description}</p>\n                <p>{w.temperature} &#8457;</p>\n\n\n              </div>\n            )\n          }\n          )}\n        </div>\n      </div>\n      \n    )\n  }\n}\n\nexport default Weather;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}