{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Alerts.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Alert } from \"reactstrap\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\nimport '../css/Alerts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Alerts = () => {\n  _s();\n  const [alerts, setAlerts] = useState(null);\n  const [numAlerts, setNumAlerts] = useState(6);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getAlerts(numAlerts);\n      console.log(response);\n      setAlerts(response);\n    };\n    getData();\n  }, []);\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n      // second: 'numeric'\n    };\n\n    return date.toLocaleString('en-US', options);\n  }\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure';\n    } else if (input === 'Information') {\n      return 'alert-type-information';\n    } else if (input === 'Caution') {\n      return 'alert-type-caution';\n    } else if (input === 'Danger') {\n      return 'alert-type-danger';\n    }\n  }\n  function getMoreAlerts() {\n    setNumAlerts(numAlerts + 6);\n    console.log('get more alerts');\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"alerts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"alerts-tiems\",\n      children: alerts && alerts.map(item => {\n        let forMattedDate = formatDate(item.lastIndexedDate);\n        let convertedAlertType = convertAlertType(item.category);\n        return /*#__PURE__*/_jsxDEV(Alert, {\n          id: item.id,\n          convertedAlertType: convertedAlertType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getMoreAlerts,\n      children: \"See More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Alerts, \"ExX2pMM4+h6RtQmGFJhgs/mgZW0=\");\n_c = Alerts;\nexport default Alerts;\nvar _c;\n$RefreshReg$(_c, \"Alerts\");","map":{"version":3,"names":["React","useEffect","useState","Alert","NParksServiceRequest","jsxDEV","_jsxDEV","Alerts","_s","alerts","setAlerts","numAlerts","setNumAlerts","getData","response","getAlerts","console","log","formatDate","dateString","date","Date","options","month","day","hour","minute","toLocaleString","convertAlertType","input","getMoreAlerts","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","forMattedDate","lastIndexedDate","convertedAlertType","category","onClick","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/Alerts.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Alert } from \"reactstrap\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\n\nimport '../css/Alerts.css'\n\nconst Alerts = () => {\n\n  const [alerts, setAlerts] = useState(null)\n  const [numAlerts, setNumAlerts] = useState(6)\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getAlerts(numAlerts)\n      console.log(response)\n      setAlerts(response)\n    }\n    getData()\n  }, [])\n\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    };\n    return date.toLocaleString('en-US', options);\n  }\n\n\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure'\n    } else if (input === 'Information') {\n      return 'alert-type-information'\n    } else if (input === 'Caution') {\n      return 'alert-type-caution'\n    } else if (input === 'Danger') {\n      return 'alert-type-danger'\n    }\n  }\n\n  function getMoreAlerts() {\n    setNumAlerts(numAlerts+6)\n    console.log('get more alerts')\n  }\n\n  return (\n    <div id=\"alerts-container\">\n      <h1>Alerts</h1>\n      <div id=\"alerts-tiems\">\n        {alerts && alerts.map(item => {\n          let forMattedDate = formatDate(item.lastIndexedDate)\n          let convertedAlertType = convertAlertType(item.category)\n          return (\n            <Alert\n              id={item.id}\n              convertedAlertType={convertedAlertType}\n            />\n          )\n        })\n        }\n      </div>\n      <button onClick={getMoreAlerts}>See More</button>\n    </div>\n  )\n}\n\nexport default Alerts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}