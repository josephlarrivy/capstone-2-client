{"ast":null,"code":"import axios from 'axios';\nimport { recreation_api_key } from '../keys';\nclass RecreationGovAPI {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseUrl = 'https://ridb.recreation.gov/api/v1';\n  }\n  static async searchActivities(query) {\n    const endpoint = `https://ridb.recreation.gov/api/v1/activities`;\n    const params = {\n      apikey: recreation_api_key,\n      query\n    };\n    const response = await axios.get(endpoint, {\n      params\n    });\n    return response.data;\n  }\n  async getPark(parkCode) {\n    const endpoint = `${this.baseUrl}/facilities`;\n    const params = {\n      apikey: recreation_api_key,\n      facilityCode: parkCode,\n      limit: 1\n    };\n    const response = await axios.get(endpoint, {\n      params\n    });\n    return response.data.RECDATA[0];\n  }\n  async getParkActivities(parkCode) {\n    const endpoint = `${this.baseUrl}/facilities/${parkCode}/activities`;\n    const params = {\n      apikey: recreation_api_key\n    };\n    const response = await axios.get(endpoint, {\n      params\n    });\n    return response.data;\n  }\n}\nexport default RecreationGovAPI;","map":{"version":3,"names":["axios","recreation_api_key","RecreationGovAPI","constructor","apiKey","baseUrl","searchActivities","query","endpoint","params","apikey","response","get","data","getPark","parkCode","facilityCode","limit","RECDATA","getParkActivities"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/apis/RecreationGovAPI.js"],"sourcesContent":["import axios from 'axios';\n\nimport { recreation_api_key } from '../keys';\n\nclass RecreationGovAPI {\n  constructor(apiKey) {\n    this.apiKey = apiKey;\n    this.baseUrl = 'https://ridb.recreation.gov/api/v1';\n  }\n\n  static async searchActivities(query) {\n    const endpoint = `https://ridb.recreation.gov/api/v1/activities`;\n    const params = {\n      apikey: recreation_api_key,\n      query,\n    };\n    const response = await axios.get(endpoint, { params });\n    return response.data;\n  }\n\n  async getPark(parkCode) {\n    const endpoint = `${this.baseUrl}/facilities`;\n    const params = {\n      apikey: recreation_api_key,\n      facilityCode: parkCode,\n      limit: 1,\n    };\n    const response = await axios.get(endpoint, { params });\n    return response.data.RECDATA[0];\n  }\n\n  async getParkActivities(parkCode) {\n    const endpoint = `${this.baseUrl}/facilities/${parkCode}/activities`;\n    const params = {\n      apikey: recreation_api_key,\n    };\n    const response = await axios.get(endpoint, { params });\n    return response.data;\n  }\n}\n\nexport default RecreationGovAPI;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,kBAAkB,QAAQ,SAAS;AAE5C,MAAMC,gBAAgB,CAAC;EACrBC,WAAWA,CAACC,MAAM,EAAE;IAClB,IAAI,CAACA,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAG,oCAAoC;EACrD;EAEA,aAAaC,gBAAgBA,CAACC,KAAK,EAAE;IACnC,MAAMC,QAAQ,GAAI,+CAA8C;IAChE,MAAMC,MAAM,GAAG;MACbC,MAAM,EAAET,kBAAkB;MAC1BM;IACF,CAAC;IACD,MAAMI,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,QAAQ,EAAE;MAAEC;IAAO,CAAC,CAAC;IACtD,OAAOE,QAAQ,CAACE,IAAI;EACtB;EAEA,MAAMC,OAAOA,CAACC,QAAQ,EAAE;IACtB,MAAMP,QAAQ,GAAI,GAAE,IAAI,CAACH,OAAQ,aAAY;IAC7C,MAAMI,MAAM,GAAG;MACbC,MAAM,EAAET,kBAAkB;MAC1Be,YAAY,EAAED,QAAQ;MACtBE,KAAK,EAAE;IACT,CAAC;IACD,MAAMN,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,QAAQ,EAAE;MAAEC;IAAO,CAAC,CAAC;IACtD,OAAOE,QAAQ,CAACE,IAAI,CAACK,OAAO,CAAC,CAAC,CAAC;EACjC;EAEA,MAAMC,iBAAiBA,CAACJ,QAAQ,EAAE;IAChC,MAAMP,QAAQ,GAAI,GAAE,IAAI,CAACH,OAAQ,eAAcU,QAAS,aAAY;IACpE,MAAMN,MAAM,GAAG;MACbC,MAAM,EAAET;IACV,CAAC;IACD,MAAMU,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAACJ,QAAQ,EAAE;MAAEC;IAAO,CAAC,CAAC;IACtD,OAAOE,QAAQ,CAACE,IAAI;EACtB;AACF;AAEA,eAAeX,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}