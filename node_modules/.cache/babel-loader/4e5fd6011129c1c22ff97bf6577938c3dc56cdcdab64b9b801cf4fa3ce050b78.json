{"ast":null,"code":"/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../../utils'),\n  Cookie = require('./cookie');\n\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nvar Session = module.exports = function Session(req, data) {\n  Object.defineProperty(this, 'req', {\n    value: req\n  });\n  Object.defineProperty(this, 'id', {\n    value: req.sessionID\n  });\n  if ('object' == typeof data) {\n    utils.merge(this, data);\n  } else {\n    this.lastAccess = Date.now();\n  }\n};\n\n/**\n * Update `.lastAccess` timestamp,\n * and reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.touch = function () {\n  return this.resetLastAccess().resetMaxAge();\n};\n\n/**\n * Update `.lastAccess` timestamp.\n *\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.resetLastAccess = function () {\n  this.lastAccess = Date.now();\n  return this;\n};\n\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.resetMaxAge = function () {\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n};\n\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.save = function (fn) {\n  this.req.sessionStore.set(this.id, this, fn || function () {});\n  return this;\n};\n\n/**\n * Re-loads the session data _without_ altering\n * the maxAge or lastAccess properties. Invokes the\n * callback `fn(err)`, after which time if no exception\n * has occurred the `req.session` property will be\n * a new `Session` object, although representing the\n * same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.reload = function (fn) {\n  var req = this.req,\n    store = this.req.sessionStore;\n  store.get(this.id, function (err, sess) {\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n};\n\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.destroy = function (fn) {\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n};\n\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.regenerate = function (fn) {\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n};","map":{"version":3,"names":["utils","require","Cookie","Session","module","exports","req","data","Object","defineProperty","value","sessionID","merge","lastAccess","Date","now","prototype","touch","resetLastAccess","resetMaxAge","cookie","maxAge","originalMaxAge","save","fn","sessionStore","set","id","reload","store","get","err","sess","Error","createSession","destroy","session","regenerate"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/session/session.js"],"sourcesContent":["\n/*!\n * Connect - session - Session\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../../utils')\n  , Cookie = require('./cookie');\n\n/**\n * Create a new `Session` with the given request and `data`.\n *\n * @param {IncomingRequest} req\n * @param {Object} data\n * @api private\n */\n\nvar Session = module.exports = function Session(req, data) {\n  Object.defineProperty(this, 'req', { value: req });\n  Object.defineProperty(this, 'id', { value: req.sessionID });\n  if ('object' == typeof data) {\n    utils.merge(this, data);\n  } else {\n    this.lastAccess = Date.now();\n  }\n};\n\n/**\n * Update `.lastAccess` timestamp,\n * and reset `.cookie.maxAge` to prevent\n * the cookie from expiring when the\n * session is still active.\n *\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.touch = function(){\n  return this\n    .resetLastAccess()\n    .resetMaxAge();\n};\n\n/**\n * Update `.lastAccess` timestamp.\n *\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.resetLastAccess = function(){\n  this.lastAccess = Date.now();\n  return this;\n};\n\n/**\n * Reset `.maxAge` to `.originalMaxAge`.\n *\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.resetMaxAge = function(){\n  this.cookie.maxAge = this.cookie.originalMaxAge;\n  return this;\n};\n\n/**\n * Save the session data with optional callback `fn(err)`.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.save = function(fn){\n  this.req.sessionStore.set(this.id, this, fn || function(){});\n  return this;\n};\n\n/**\n * Re-loads the session data _without_ altering\n * the maxAge or lastAccess properties. Invokes the\n * callback `fn(err)`, after which time if no exception\n * has occurred the `req.session` property will be\n * a new `Session` object, although representing the\n * same session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.reload = function(fn){\n  var req = this.req\n    , store = this.req.sessionStore;\n  store.get(this.id, function(err, sess){\n    if (err) return fn(err);\n    if (!sess) return fn(new Error('failed to load session'));\n    store.createSession(req, sess);\n    fn();\n  });\n  return this;\n};\n\n/**\n * Destroy `this` session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.destroy = function(fn){\n  delete this.req.session;\n  this.req.sessionStore.destroy(this.id, fn);\n  return this;\n};\n\n/**\n * Regenerate this request's session.\n *\n * @param {Function} fn\n * @return {Session} for chaining\n * @api public\n */\n\nSession.prototype.regenerate = function(fn){\n  this.req.sessionStore.regenerate(this.req, fn);\n  return this;\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}