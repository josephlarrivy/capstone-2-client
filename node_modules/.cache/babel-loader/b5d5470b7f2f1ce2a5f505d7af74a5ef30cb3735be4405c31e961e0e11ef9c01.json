{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/AlertsByPark.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\nimport '../css/Alerts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlertsByPark = _ref => {\n  _s();\n  let {\n    code\n  } = _ref;\n  const [alerts, setAlerts] = useState(null);\n  const [numAlerts, setNumAlerts] = useState(6);\n  useEffect(() => {\n    const getParkAlerts = async code => {\n      const alerts = await NParksServiceRequest.getAlertsByParkCode(code);\n    };\n    getParkAlerts(code);\n  }, []);\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n      // second: 'numeric'\n    };\n\n    return date.toLocaleString('en-US', options);\n  }\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure';\n    } else if (input === 'Information') {\n      return 'alert-type-information';\n    } else if (input === 'Caution') {\n      return 'alert-type-caution';\n    } else if (input === 'Danger') {\n      return 'alert-type-danger';\n    }\n  }\n  function getMoreAlerts() {\n    setNumAlerts(numAlerts + 6);\n    // console.log('get more alerts')\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"alerts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Park Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"alerts-items\",\n      children: alerts && alerts.map(item => {\n        let forMattedDate = formatDate(item.lastIndexedDate);\n        let convertedAlertType = convertAlertType(item.category);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: convertedAlertType,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: forMattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more-info-icon\",\n            children: item.url ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"more-info-icon\",\n                src: require('../images/more-info-icon.png')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"load-more-home-button\",\n      onClick: getMoreAlerts,\n      children: \"See More Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertsByPark, \"ExX2pMM4+h6RtQmGFJhgs/mgZW0=\");\n_c = AlertsByPark;\nexport default AlertsByPark;\nvar _c;\n$RefreshReg$(_c, \"AlertsByPark\");","map":{"version":3,"names":["React","useEffect","useState","NParksServiceRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","AlertsByPark","_ref","_s","code","alerts","setAlerts","numAlerts","setNumAlerts","getParkAlerts","getAlertsByParkCode","formatDate","dateString","date","Date","options","month","day","hour","minute","toLocaleString","convertAlertType","input","getMoreAlerts","id","children","fileName","_jsxFileName","lineNumber","columnNumber","map","item","forMattedDate","lastIndexedDate","convertedAlertType","category","className","title","url","href","target","src","require","onClick","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/AlertsByPark.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\n\nimport '../css/Alerts.css'\n\nconst AlertsByPark = ({code}) => {\n\n  const [alerts, setAlerts] = useState(null)\n  const [numAlerts, setNumAlerts] = useState(6)\n\n  useEffect(() => {\n    const getParkAlerts = async (code) => {\n      const alerts = await NParksServiceRequest.getAlertsByParkCode(code)\n    }\n    getParkAlerts(code)\n  }, [])\n\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    };\n    return date.toLocaleString('en-US', options);\n  }\n\n\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure'\n    } else if (input === 'Information') {\n      return 'alert-type-information'\n    } else if (input === 'Caution') {\n      return 'alert-type-caution'\n    } else if (input === 'Danger') {\n      return 'alert-type-danger'\n    }\n  }\n\n  function getMoreAlerts() {\n    setNumAlerts(numAlerts + 6)\n    // console.log('get more alerts')\n  }\n\n\n\n  return (\n    <div id=\"alerts-container\">\n      <h1>Park Alerts</h1>\n      <div id=\"alerts-items\">\n        {alerts && alerts.map(item => {\n\n          let forMattedDate = formatDate(item.lastIndexedDate)\n          let convertedAlertType = convertAlertType(item.category)\n\n          return (\n            <div key={item.id} className=\"alert-item\">\n              <div className={convertedAlertType}>\n                <p>{item.category}</p>\n              </div>\n              <div className=\"alert-information\">\n                <p>{forMattedDate}</p>\n                <p>{item.title}</p>\n              </div>\n              <div className=\"more-info-icon\">\n                {item.url\n                  ? <a href={item.url} target=\"_blank\">\n                    <img className=\"more-info-icon\" src={require('../images/more-info-icon.png')}></img>\n                  </a>\n                  : <></>\n                }\n              </div>\n            </div>\n          )\n        })\n        }\n      </div>\n      <button id='load-more-home-button' onClick={getMoreAlerts}>See More Alerts</button>\n    </div>\n  )\n}\n\nexport default AlertsByPark;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}