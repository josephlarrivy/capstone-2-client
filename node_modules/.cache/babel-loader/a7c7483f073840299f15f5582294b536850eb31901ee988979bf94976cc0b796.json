{"ast":null,"code":"/*!\n * Connect - router\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils'),\n  parse = require('url').parse;\n\n/**\n * Expose router.\n */\n\nexports = module.exports = router;\n\n/**\n * Supported HTTP / WebDAV methods.\n */\n\nvar _methods = exports.methods = ['get', 'post', 'put', 'delete', 'connect', 'options', 'trace', 'copy', 'lock', 'mkcol', 'move', 'propfind', 'proppatch', 'unlock', 'report', 'mkactivity', 'checkout', 'merge'];\n\n/**\n * Provides Sinatra and Express-like routing capabilities.\n *\n * Examples:\n *\n *     connect.router(function(app){\n *       app.get('/user/:id', function(req, res, next){\n *         // populates req.params.id\n *       });\n *       app.put('/user/:id', function(req, res, next){\n *         // populates req.params.id\n *       });\n *     })\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\nfunction router(fn) {\n  var self = this,\n    methods = {},\n    routes = {},\n    params = {};\n  if (!fn) throw new Error('router provider requires a callback function');\n\n  // Generate method functions\n  _methods.forEach(function (method) {\n    methods[method] = generateMethodFunction(method.toUpperCase());\n  });\n\n  // Alias del -> delete\n  methods.del = methods.delete;\n\n  // Apply callback to all methods\n  methods.all = function () {\n    var args = arguments;\n    _methods.forEach(function (name) {\n      methods[name].apply(this, args);\n    });\n    return self;\n  };\n\n  // Register param callback\n  methods.param = function (name, fn) {\n    params[name] = fn;\n  };\n  fn.call(this, methods);\n  function generateMethodFunction(name) {\n    var localRoutes = routes[name] = routes[name] || [];\n    return function (path, fn) {\n      var keys = [],\n        middleware = [];\n\n      // slice middleware\n      if (arguments.length > 2) {\n        middleware = Array.prototype.slice.call(arguments, 1, arguments.length);\n        fn = middleware.pop();\n        middleware = utils.flatten(middleware);\n      }\n      fn.middleware = middleware;\n      if (!path) throw new Error(name + ' route requires a path');\n      if (!fn) throw new Error(name + ' route ' + path + ' requires a callback');\n      var regexp = path instanceof RegExp ? path : normalizePath(path, keys);\n      localRoutes.push({\n        fn: fn,\n        path: regexp,\n        keys: keys,\n        orig: path,\n        method: name\n      });\n      return self;\n    };\n  }\n  function router(req, res, next) {\n    var route,\n      self = this;\n    (function pass(i) {\n      if (route = match(req, routes, i)) {\n        var i = 0,\n          keys = route.keys;\n        req.params = route.params;\n\n        // Param preconditions\n        (function param(err) {\n          try {\n            var key = keys[i++],\n              val = req.params[key],\n              fn = params[key];\n            if ('route' == err) {\n              pass(req._route_index + 1);\n              // Error\n            } else if (err) {\n              next(err);\n              // Param has callback\n            } else if (fn) {\n              // Return style\n              if (1 == fn.length) {\n                req.params[key] = fn(val);\n                param();\n                // Middleware style\n              } else {\n                fn(req, res, param, val);\n              }\n              // Finished processing params\n            } else if (!key) {\n              // route middleware\n              i = 0;\n              (function nextMiddleware(err) {\n                var fn = route.middleware[i++];\n                if ('route' == err) {\n                  pass(req._route_index + 1);\n                } else if (err) {\n                  next(err);\n                } else if (fn) {\n                  fn(req, res, nextMiddleware);\n                } else {\n                  route.call(self, req, res, function (err) {\n                    if (err) {\n                      next(err);\n                    } else {\n                      pass(req._route_index + 1);\n                    }\n                  });\n                }\n              })();\n              // More params\n            } else {\n              param();\n            }\n          } catch (err) {\n            next(err);\n          }\n        })();\n      } else if ('OPTIONS' == req.method) {\n        options(req, res, routes);\n      } else {\n        next();\n      }\n    })();\n  }\n  ;\n  router.remove = function (path, method) {\n    var fns = router.lookup(path, method);\n    fns.forEach(function (fn) {\n      routes[fn.method].splice(fn.index, 1);\n    });\n  };\n  router.lookup = function (path, method, ret) {\n    ret = ret || [];\n\n    // method specific lookup\n    if (method) {\n      method = method.toUpperCase();\n      if (routes[method]) {\n        routes[method].forEach(function (route, i) {\n          if (path == route.orig) {\n            var fn = route.fn;\n            fn.regexp = route.path;\n            fn.keys = route.keys;\n            fn.path = route.orig;\n            fn.method = route.method;\n            fn.index = i;\n            ret.push(fn);\n          }\n        });\n      }\n      // global lookup\n    } else {\n      _methods.forEach(function (method) {\n        router.lookup(path, method, ret);\n      });\n    }\n    return ret;\n  };\n  router.match = function (url, method, ret) {\n    var ret = ret || [],\n      i = 0,\n      fn,\n      req;\n\n    // method specific matches\n    if (method) {\n      method = method.toUpperCase();\n      req = {\n        url: url,\n        method: method\n      };\n      while (fn = match(req, routes, i)) {\n        i = req._route_index + 1;\n        ret.push(fn);\n      }\n      // global matches\n    } else {\n      _methods.forEach(function (method) {\n        router.match(url, method, ret);\n      });\n    }\n    return ret;\n  };\n  return router;\n}\n\n/**\n * Respond to OPTIONS.\n *\n * @param {ServerRequest} req\n * @param {ServerResponse} req\n * @param {Array} routes\n * @api private\n */\n\nfunction options(req, res, routes) {\n  var pathname = parse(req.url).pathname,\n    body = optionsFor(pathname, routes).join(',');\n  res.writeHead(200, {\n    'Content-Length': body.length,\n    'Allow': body\n  });\n  res.end(body);\n}\n\n/**\n * Return OPTIONS array for the given `path`, matching `routes`.\n *\n * @param {String} path\n * @param {Array} routes\n * @return {Array}\n * @api private\n */\n\nfunction optionsFor(path, routes) {\n  return _methods.filter(function (method) {\n    var arr = routes[method.toUpperCase()];\n    for (var i = 0, len = arr.length; i < len; ++i) {\n      if (arr[i].path.test(path)) return true;\n    }\n  }).map(function (method) {\n    return method.toUpperCase();\n  });\n}\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String} path\n * @param  {Array} keys\n * @return {RegExp}\n * @api private\n */\n\nfunction normalizePath(path, keys) {\n  path = path.concat('/?').replace(/\\/\\(/g, '(?:/').replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function (_, slash, format, key, capture, optional) {\n    keys.push(key);\n    slash = slash || '';\n    return '' + (optional ? '' : slash) + '(?:' + (optional ? slash : '') + (format || '') + (capture || '([^/]+?)') + ')' + (optional || '');\n  }).replace(/([\\/.])/g, '\\\\$1').replace(/\\*/g, '(.+)');\n  return new RegExp('^' + path + '$', 'i');\n}\n\n/**\n * Attempt to match the given request to\n * one of the routes. When successful\n * a route function is returned.\n *\n * @param  {ServerRequest} req\n * @param  {Object} routes\n * @return {Function}\n * @api private\n */\n\nfunction match(req, routes, i) {\n  var captures,\n    method = req.method,\n    i = i || 0;\n  if ('HEAD' == method) method = 'GET';\n  if (routes = routes[method]) {\n    var url = parse(req.url),\n      pathname = url.pathname;\n    for (var len = routes.length; i < len; ++i) {\n      var route = routes[i],\n        fn = route.fn,\n        path = route.path,\n        keys = fn.keys = route.keys;\n      if (captures = path.exec(pathname)) {\n        fn.method = method;\n        fn.params = [];\n        for (var j = 1, len = captures.length; j < len; ++j) {\n          var key = keys[j - 1],\n            val = typeof captures[j] === 'string' ? decodeURIComponent(captures[j]) : captures[j];\n          if (key) {\n            fn.params[key] = val;\n          } else {\n            fn.params.push(val);\n          }\n        }\n        req._route_index = i;\n        return fn;\n      }\n    }\n  }\n}","map":{"version":3,"names":["utils","require","parse","exports","module","router","_methods","methods","fn","self","routes","params","Error","forEach","method","generateMethodFunction","toUpperCase","del","delete","all","args","arguments","name","apply","param","call","localRoutes","path","keys","middleware","length","Array","prototype","slice","pop","flatten","regexp","RegExp","normalizePath","push","orig","req","res","next","route","pass","i","match","err","key","val","_route_index","nextMiddleware","options","remove","fns","lookup","splice","index","ret","url","pathname","body","optionsFor","join","writeHead","end","filter","arr","len","test","map","concat","replace","_","slash","format","capture","optional","captures","exec","j","decodeURIComponent"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/router.js"],"sourcesContent":["\n/*!\n * Connect - router\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('../utils')\n  , parse = require('url').parse;\n\n/**\n * Expose router.\n */\n\nexports = module.exports = router;\n\n/**\n * Supported HTTP / WebDAV methods.\n */\n\nvar _methods = exports.methods = [\n    'get'\n  , 'post'\n  , 'put'\n  , 'delete'\n  , 'connect'\n  , 'options'\n  , 'trace'\n  , 'copy'\n  , 'lock'\n  , 'mkcol'\n  , 'move'\n  , 'propfind'\n  , 'proppatch'\n  , 'unlock'\n  , 'report'\n  , 'mkactivity'\n  , 'checkout'\n  , 'merge'\n];\n\n/**\n * Provides Sinatra and Express-like routing capabilities.\n *\n * Examples:\n *\n *     connect.router(function(app){\n *       app.get('/user/:id', function(req, res, next){\n *         // populates req.params.id\n *       });\n *       app.put('/user/:id', function(req, res, next){\n *         // populates req.params.id\n *       });\n *     })\n *\n * @param {Function} fn\n * @return {Function}\n * @api public\n */\n\nfunction router(fn){\n  var self = this\n    , methods = {}\n    , routes = {}\n    , params = {};\n\n  if (!fn) throw new Error('router provider requires a callback function');\n\n  // Generate method functions\n  _methods.forEach(function(method){\n    methods[method] = generateMethodFunction(method.toUpperCase());\n  });\n\n  // Alias del -> delete\n  methods.del = methods.delete;\n\n  // Apply callback to all methods\n  methods.all = function(){\n    var args = arguments;\n    _methods.forEach(function(name){\n      methods[name].apply(this, args);\n    });\n    return self;\n  };\n\n  // Register param callback\n  methods.param = function(name, fn){\n    params[name] = fn;\n  };\n      \n  fn.call(this, methods);\n\n  function generateMethodFunction(name) {\n    var localRoutes = routes[name] = routes[name] || [];\n    return function(path, fn){\n      var keys = []\n        , middleware = [];\n\n      // slice middleware\n      if (arguments.length > 2) {\n        middleware = Array.prototype.slice.call(arguments, 1, arguments.length);\n        fn = middleware.pop();\n        middleware = utils.flatten(middleware);\n      }\n\n      fn.middleware = middleware;\n\n      if (!path) throw new Error(name + ' route requires a path');\n      if (!fn) throw new Error(name + ' route ' + path + ' requires a callback');\n      var regexp = path instanceof RegExp\n        ? path\n        : normalizePath(path, keys);\n      localRoutes.push({\n          fn: fn\n        , path: regexp\n        , keys: keys\n        , orig: path\n        , method: name\n      });\n      return self;\n    };\n  }\n\n  function router(req, res, next){\n    var route\n      , self = this;\n\n    (function pass(i){\n      if (route = match(req, routes, i)) {\n        var i = 0\n          , keys = route.keys;\n\n        req.params = route.params;\n\n        // Param preconditions\n        (function param(err) {\n          try {\n            var key = keys[i++]\n              , val = req.params[key]\n              , fn = params[key];\n\n            if ('route' == err) {\n              pass(req._route_index + 1);\n            // Error\n            } else if (err) {\n              next(err);\n            // Param has callback\n            } else if (fn) {\n              // Return style\n              if (1 == fn.length) {\n                req.params[key] = fn(val);\n                param();\n              // Middleware style\n              } else {\n                fn(req, res, param, val);\n              }\n            // Finished processing params\n            } else if (!key) {\n              // route middleware\n              i = 0;\n              (function nextMiddleware(err){\n                var fn = route.middleware[i++];\n                if ('route' == err) {\n                  pass(req._route_index + 1);\n                } else if (err) {\n                  next(err);\n                } else if (fn) {\n                  fn(req, res, nextMiddleware);\n                } else {\n                  route.call(self, req, res, function(err){\n                    if (err) {\n                      next(err);\n                    } else {\n                      pass(req._route_index + 1);\n                    }\n                  });\n                }\n              })();\n            // More params\n            } else {\n              param();\n            }\n          } catch (err) {\n            next(err);\n          }\n        })();\n      } else if ('OPTIONS' == req.method) {\n        options(req, res, routes);\n      } else {\n        next();\n      }\n    })();\n  };\n\n  router.remove = function(path, method){\n    var fns = router.lookup(path, method);\n    fns.forEach(function(fn){\n      routes[fn.method].splice(fn.index, 1);\n    });\n  };\n\n  router.lookup = function(path, method, ret){\n    ret = ret || [];\n\n    // method specific lookup\n    if (method) {\n      method = method.toUpperCase();\n      if (routes[method]) {\n        routes[method].forEach(function(route, i){\n          if (path == route.orig) {\n            var fn = route.fn;\n            fn.regexp = route.path;\n            fn.keys = route.keys;\n            fn.path = route.orig;\n            fn.method = route.method;\n            fn.index = i;\n            ret.push(fn);\n          }\n        });\n      }\n    // global lookup\n    } else {\n      _methods.forEach(function(method){\n        router.lookup(path, method, ret);\n      });\n    }\n\n    return ret;\n  };\n\n  router.match = function(url, method, ret){\n    var ret = ret || []\n      , i = 0\n      , fn\n      , req;\n\n    // method specific matches\n    if (method) {\n      method = method.toUpperCase();\n      req = { url: url, method: method };\n      while (fn = match(req, routes, i)) {\n        i = req._route_index + 1;\n        ret.push(fn);\n      } \n    // global matches\n    } else {\n      _methods.forEach(function(method){\n        router.match(url, method, ret);\n      });\n    }\n\n    return ret;\n  };\n\n  return router;\n}\n\n/**\n * Respond to OPTIONS.\n *\n * @param {ServerRequest} req\n * @param {ServerResponse} req\n * @param {Array} routes\n * @api private\n */\n\nfunction options(req, res, routes) {\n  var pathname = parse(req.url).pathname\n    , body = optionsFor(pathname, routes).join(',');\n  res.writeHead(200, {\n      'Content-Length': body.length\n    , 'Allow': body\n  });\n  res.end(body);\n}\n\n/**\n * Return OPTIONS array for the given `path`, matching `routes`.\n *\n * @param {String} path\n * @param {Array} routes\n * @return {Array}\n * @api private\n */\n\nfunction optionsFor(path, routes) {\n  return _methods.filter(function(method){\n    var arr = routes[method.toUpperCase()];\n    for (var i = 0, len = arr.length; i < len; ++i) {\n      if (arr[i].path.test(path)) return true;\n    }\n  }).map(function(method){\n    return method.toUpperCase();\n  });\n}\n\n/**\n * Normalize the given path string,\n * returning a regular expression.\n *\n * An empty array should be passed,\n * which will contain the placeholder\n * key names. For example \"/user/:id\" will\n * then contain [\"id\"].\n *\n * @param  {String} path\n * @param  {Array} keys\n * @return {RegExp}\n * @api private\n */\n\nfunction normalizePath(path, keys) {\n  path = path\n    .concat('/?')\n    .replace(/\\/\\(/g, '(?:/')\n    .replace(/(\\/)?(\\.)?:(\\w+)(?:(\\(.*?\\)))?(\\?)?/g, function(_, slash, format, key, capture, optional){\n      keys.push(key);\n      slash = slash || '';\n      return ''\n        + (optional ? '' : slash)\n        + '(?:'\n        + (optional ? slash : '')\n        + (format || '') + (capture || '([^/]+?)') + ')'\n        + (optional || '');\n    })\n    .replace(/([\\/.])/g, '\\\\$1')\n    .replace(/\\*/g, '(.+)');\n  return new RegExp('^' + path + '$', 'i');\n}\n\n/**\n * Attempt to match the given request to\n * one of the routes. When successful\n * a route function is returned.\n *\n * @param  {ServerRequest} req\n * @param  {Object} routes\n * @return {Function}\n * @api private\n */\n\nfunction match(req, routes, i) {\n  var captures\n    , method = req.method\n    , i = i || 0;\n  if ('HEAD' == method) method = 'GET';\n  if (routes = routes[method]) {\n    var url = parse(req.url)\n      , pathname = url.pathname;\n    for (var len = routes.length; i < len; ++i) {\n      var route = routes[i]\n        , fn = route.fn\n        , path = route.path\n        , keys = fn.keys = route.keys;\n      if (captures = path.exec(pathname)) {\n        fn.method = method;\n        fn.params = [];\n        for (var j = 1, len = captures.length; j < len; ++j) {\n          var key = keys[j-1],\n            val = typeof captures[j] === 'string'\n              ? decodeURIComponent(captures[j])\n              : captures[j];\n          if (key) {\n            fn.params[key] = val;\n          } else {\n            fn.params.push(val);\n          }\n        }\n        req._route_index = i;\n        return fn;\n      }\n    }\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}