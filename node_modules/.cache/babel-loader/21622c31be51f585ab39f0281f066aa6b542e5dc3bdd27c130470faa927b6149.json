{"ast":null,"code":"/*!\n * Connect - cookieParser\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./../utils');\n\n/**\n * Parse _Cookie_ header and populate `req.cookies`\n * with an object keyed by the cookie names.\n *\n * Examples:\n *\n *     connect.createServer(\n *         connect.cookieParser()\n *       , function(req, res, next){\n *         res.end(JSON.stringify(req.cookies));\n *       }\n *     );\n *\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function cookieParser() {\n  return function cookieParser(req, res, next) {\n    var cookie = req.headers.cookie;\n    if (req.cookies) return next();\n    req.cookies = {};\n    if (cookie) {\n      try {\n        req.cookies = utils.parseCookie(cookie);\n      } catch (err) {\n        return next(err);\n      }\n    }\n    next();\n  };\n};","map":{"version":3,"names":["utils","require","module","exports","cookieParser","req","res","next","cookie","headers","cookies","parseCookie","err"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/node_modules/facebook-sdk/node_modules/connect/lib/middleware/cookieParser.js"],"sourcesContent":["\n/*!\n * Connect - cookieParser\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * MIT Licensed\n */\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./../utils');\n\n/**\n * Parse _Cookie_ header and populate `req.cookies`\n * with an object keyed by the cookie names.\n *\n * Examples:\n *\n *     connect.createServer(\n *         connect.cookieParser()\n *       , function(req, res, next){\n *         res.end(JSON.stringify(req.cookies));\n *       }\n *     );\n *\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function cookieParser(){\n  return function cookieParser(req, res, next) {\n    var cookie = req.headers.cookie;\n    if (req.cookies) return next();\n    req.cookies = {};\n    if (cookie) {\n      try {\n        req.cookies = utils.parseCookie(cookie);\n      } catch (err) {\n        return next(err);\n      }\n    }\n    next();\n  };\n};"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,YAAY,CAAC;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,SAASC,YAAYA,CAAA,EAAE;EACtC,OAAO,SAASA,YAAYA,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAE;IAC3C,IAAIC,MAAM,GAAGH,GAAG,CAACI,OAAO,CAACD,MAAM;IAC/B,IAAIH,GAAG,CAACK,OAAO,EAAE,OAAOH,IAAI,EAAE;IAC9BF,GAAG,CAACK,OAAO,GAAG,CAAC,CAAC;IAChB,IAAIF,MAAM,EAAE;MACV,IAAI;QACFH,GAAG,CAACK,OAAO,GAAGV,KAAK,CAACW,WAAW,CAACH,MAAM,CAAC;MACzC,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZ,OAAOL,IAAI,CAACK,GAAG,CAAC;MAClB;IACF;IACAL,IAAI,EAAE;EACR,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}