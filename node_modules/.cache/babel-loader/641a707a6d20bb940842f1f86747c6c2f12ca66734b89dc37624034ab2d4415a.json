{"ast":null,"code":"import _slicedToArray from\"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from\"react\";var useStateNameConverter=function useStateNameConverter(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),stateName=_useState2[0],setStateName=_useState2[1];var convertStateName=function convertStateName(abbreviation){var stateMap={AL:\"Alabama\",AK:\"Alaska\",AZ:\"Arizona\",AR:\"Arkansas\",CA:\"California\",CO:\"Colorado\",CT:\"Connecticut\",DE:\"Delaware\",FL:\"Florida\",GA:\"Georgia\",HI:\"Hawaii\",ID:\"Idaho\",IL:\"Illinois\",IN:\"Indiana\",IA:\"Iowa\",KS:\"Kansas\",KY:\"Kentucky\",LA:\"Louisiana\",ME:\"Maine\",MD:\"Maryland\",MA:\"Massachusetts\",MI:\"Michigan\",MN:\"Minnesota\",MS:\"Mississippi\",MO:\"Missouri\",MT:\"Montana\",NE:\"Nebraska\",NV:\"Nevada\",NH:\"New Hampshire\",NJ:\"New Jersey\",NM:\"New Mexico\",NY:\"New York\",NC:\"North Carolina\",ND:\"North Dakota\",OH:\"Ohio\",OK:\"Oklahoma\",OR:\"Oregon\",PA:\"Pennsylvania\",RI:\"Rhode Island\",SC:\"South Carolina\",SD:\"South Dakota\",TN:\"Tennessee\",TX:\"Texas\",UT:\"Utah\",VT:\"Vermont\",VA:\"Virginia\",WA:\"Washington\",WV:\"West Virginia\",WI:\"Wisconsin\",WY:\"Wyoming\"};setStateName(stateMap[abbreviation]||\"\");return stateMap[abbreviation]||\"\";};return[stateName,convertStateName];};export default useStateNameConverter;","map":{"version":3,"names":["useState","useStateNameConverter","_useState","_useState2","_slicedToArray","stateName","setStateName","convertStateName","abbreviation","stateMap","AL","AK","AZ","AR","CA","CO","CT","DE","FL","GA","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","RI","SC","SD","TN","TX","UT","VT","VA","WA","WV","WI","WY"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/client/src/hooks/useStateNameConverter.js"],"sourcesContent":["import { useState } from \"react\";\n\nconst useStateNameConverter = () => {\n  const [stateName, setStateName] = useState(\"\");\n\n  const convertStateName = (abbreviation) => {\n    const stateMap = {\n      AL: \"Alabama\",\n      AK: \"Alaska\",\n      AZ: \"Arizona\",\n      AR: \"Arkansas\",\n      CA: \"California\",\n      CO: \"Colorado\",\n      CT: \"Connecticut\",\n      DE: \"Delaware\",\n      FL: \"Florida\",\n      GA: \"Georgia\",\n      HI: \"Hawaii\",\n      ID: \"Idaho\",\n      IL: \"Illinois\",\n      IN: \"Indiana\",\n      IA: \"Iowa\",\n      KS: \"Kansas\",\n      KY: \"Kentucky\",\n      LA: \"Louisiana\",\n      ME: \"Maine\",\n      MD: \"Maryland\",\n      MA: \"Massachusetts\",\n      MI: \"Michigan\",\n      MN: \"Minnesota\",\n      MS: \"Mississippi\",\n      MO: \"Missouri\",\n      MT: \"Montana\",\n      NE: \"Nebraska\",\n      NV: \"Nevada\",\n      NH: \"New Hampshire\",\n      NJ: \"New Jersey\",\n      NM: \"New Mexico\",\n      NY: \"New York\",\n      NC: \"North Carolina\",\n      ND: \"North Dakota\",\n      OH: \"Ohio\",\n      OK: \"Oklahoma\",\n      OR: \"Oregon\",\n      PA: \"Pennsylvania\",\n      RI: \"Rhode Island\",\n      SC: \"South Carolina\",\n      SD: \"South Dakota\",\n      TN: \"Tennessee\",\n      TX: \"Texas\",\n      UT: \"Utah\",\n      VT: \"Vermont\",\n      VA: \"Virginia\",\n      WA: \"Washington\",\n      WV: \"West Virginia\",\n      WI: \"Wisconsin\",\n      WY: \"Wyoming\",\n    };\n\n    setStateName(stateMap[abbreviation] || \"\");\n\n    return stateMap[abbreviation] || \"\";\n  };\n\n  return [stateName, convertStateName];\n};\n\n\nexport default useStateNameConverter;"],"mappings":"gLAAA,OAASA,QAAQ,KAAQ,OAAO,CAEhC,GAAM,CAAAC,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAA,CAAS,CAClC,IAAAC,SAAA,CAAkCF,QAAQ,CAAC,EAAE,CAAC,CAAAG,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAvCG,SAAS,CAAAF,UAAA,IAAEG,YAAY,CAAAH,UAAA,IAE9B,GAAM,CAAAI,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIC,YAAY,CAAK,CACzC,GAAM,CAAAC,QAAQ,CAAG,CACfC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,QAAQ,CACZC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,YAAY,CAChBC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,aAAa,CACjBC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,QAAQ,CACZC,EAAE,CAAE,OAAO,CACXC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,MAAM,CACVC,EAAE,CAAE,QAAQ,CACZC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,WAAW,CACfC,EAAE,CAAE,OAAO,CACXC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,eAAe,CACnBC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,WAAW,CACfC,EAAE,CAAE,aAAa,CACjBC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,QAAQ,CACZC,EAAE,CAAE,eAAe,CACnBC,EAAE,CAAE,YAAY,CAChBC,EAAE,CAAE,YAAY,CAChBC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,gBAAgB,CACpBC,EAAE,CAAE,cAAc,CAClBC,EAAE,CAAE,MAAM,CACVC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,QAAQ,CACZC,EAAE,CAAE,cAAc,CAClBC,EAAE,CAAE,cAAc,CAClBC,EAAE,CAAE,gBAAgB,CACpBC,EAAE,CAAE,cAAc,CAClBC,EAAE,CAAE,WAAW,CACfC,EAAE,CAAE,OAAO,CACXC,EAAE,CAAE,MAAM,CACVC,EAAE,CAAE,SAAS,CACbC,EAAE,CAAE,UAAU,CACdC,EAAE,CAAE,YAAY,CAChBC,EAAE,CAAE,eAAe,CACnBC,EAAE,CAAE,WAAW,CACfC,EAAE,CAAE,SACN,CAAC,CAEDrD,YAAY,CAACG,QAAQ,CAACD,YAAY,CAAC,EAAI,EAAE,CAAC,CAE1C,MAAO,CAAAC,QAAQ,CAACD,YAAY,CAAC,EAAI,EAAE,CACrC,CAAC,CAED,MAAO,CAACH,SAAS,CAAEE,gBAAgB,CAAC,CACtC,CAAC,CAGD,cAAe,CAAAN,qBAAqB"},"metadata":{},"sourceType":"module","externalDependencies":[]}