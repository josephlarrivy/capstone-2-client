{"ast":null,"code":"var _jsxFileName = \"/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/AlertsByPark.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\nimport '../css/Alerts.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AlertsByPark = _ref => {\n  _s();\n  let {\n    code\n  } = _ref;\n  const [alerts, setAlerts] = useState(null);\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getAlertsByParkCode(code);\n      console.log(response);\n      setAlerts(response);\n    };\n    getData();\n  }, []);\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric'\n      // second: 'numeric'\n    };\n\n    return date.toLocaleString('en-US', options);\n  }\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure';\n    } else if (input === 'Information') {\n      return 'alert-type-information';\n    } else if (input === 'Caution') {\n      return 'alert-type-caution';\n    } else if (input === 'Danger') {\n      return 'alert-type-danger';\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"alerts-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Park Alerts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"alerts-items\",\n      children: alerts && alerts.map(item => {\n        let forMattedDate = formatDate(item.lastIndexedDate);\n        let convertedAlertType = convertAlertType(item.category);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: convertedAlertType,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: item.category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-information\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: forMattedDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"more-info-icon\",\n            children: item.url ? /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.url,\n              target: \"_blank\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"more-info-icon\",\n                src: require('../images/more-info-icon.png')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(AlertsByPark, \"WM6WVY/BkFhwFcfSTzbiB7tYppw=\");\n_c = AlertsByPark;\nexport default AlertsByPark;\nvar _c;\n$RefreshReg$(_c, \"AlertsByPark\");","map":{"version":3,"names":["React","useEffect","useState","NParksServiceRequest","jsxDEV","_jsxDEV","Fragment","_Fragment","AlertsByPark","_ref","_s","code","alerts","setAlerts","getData","response","getAlertsByParkCode","console","log","formatDate","dateString","date","Date","options","month","day","hour","minute","toLocaleString","convertAlertType","input","id","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","map","item","forMattedDate","lastIndexedDate","convertedAlertType","category","className","title","description","url","href","target","src","require","_c","$RefreshReg$"],"sources":["/Users/josephlarrivy/software-engineering/springboard/assignments/capstone-2-rework/front-end/src/components/AlertsByPark.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport NParksServiceRequest from \"../apis/nationalParksApi\";\n\nimport '../css/Alerts.css'\n\nconst AlertsByPark = ({code}) => {\n\n  const [alerts, setAlerts] = useState(null)\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await NParksServiceRequest.getAlertsByParkCode(code)\n      console.log(response)\n      setAlerts(response)\n    }\n    getData()\n  }, [])\n\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const options = {\n      // year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n      hour: 'numeric',\n      minute: 'numeric',\n      // second: 'numeric'\n    };\n    return date.toLocaleString('en-US', options);\n  }\n\n\n  function convertAlertType(input) {\n    if (input === 'Park Closure') {\n      return 'alert-type-closure'\n    } else if (input === 'Information') {\n      return 'alert-type-information'\n    } else if (input === 'Caution') {\n      return 'alert-type-caution'\n    } else if (input === 'Danger') {\n      return 'alert-type-danger'\n    }\n  }\n\n\n  return (\n    <div id=\"alerts-container\">\n      <h1 style={{textAlign: 'center'}}>Park Alerts</h1>\n      <div id=\"alerts-items\">\n        {alerts && alerts.map(item => {\n\n          let forMattedDate = formatDate(item.lastIndexedDate)\n          let convertedAlertType = convertAlertType(item.category)\n\n          return (\n            <div key={item.id} className=\"alert-item\">\n              <div className={convertedAlertType}>\n                <p style={{ textAlign: 'center' }}>{item.category}</p>\n              </div>\n              <div className=\"alert-information\">\n                <p>{forMattedDate}</p>\n                <p>{item.title}</p>\n                <p>{item.description}</p>\n              </div>\n              <div className=\"more-info-icon\">\n                {item.url\n                  ? <a href={item.url} target=\"_blank\">\n                    <img className=\"more-info-icon\" src={require('../images/more-info-icon.png')}></img>\n                  </a>\n                  : <></>\n                }\n              </div>\n            </div>\n          )\n        })\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AlertsByPark;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}